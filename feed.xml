<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lab2023.com</title>
  <subtitle>lab2023 official blog</subtitle>
  <id>http://lab2023.com/</id>
  <link href="http://lab2023.com/"/>
  <link href="http://lab2023.com/feed.xml" rel="self"/>
  <updated>2016-08-04T03:00:00+03:00</updated>
  <entry>
    <title>Ruby on Rails Uygulamasının Heroku Servisinde Çoklu Ortamda(Staging, Production) Yayınlanması</title>
    <link rel="alternate" href="http://lab2023.com/ruby-on-rails-uygulamasinin-heroku-servisinde-coklu-ortamda-yayinlanmasi.html"/>
    <id>http://lab2023.com/ruby-on-rails-uygulamasinin-heroku-servisinde-coklu-ortamda-yayinlanmasi.html</id>
    <published>2016-08-04T03:00:00+03:00</published>
    <updated>2017-01-27T13:59:35+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;Merhaba,&lt;/p&gt;

&lt;p&gt;Sizlere daha önceden rails uygulamanın yayına alınması yöntemlerinden biri olan kendi ubuntu sunucunuzda uygulamanın yayınlanması işlemini anlatmıştım. İlgili yazıya şu &lt;a href="http://lab2023.com/ruby-on-rails-uygulamasinin-capistrano-3-ile-kolayca-yayinlanmasi.html"&gt;linkten&lt;/a&gt; ulaşabilirsiniz.&lt;/p&gt;

&lt;p&gt;Bu yazıda ise uygulamanın &lt;a href="http://heroku.com" target="_blank"&gt;Heroku&lt;/a&gt; servisi üzerinde, çoklu ortamlar(Staging, Production) için ayrı ayrı yayına alınması süreçlerinden ve her bir ortam için farklı git branch&amp;#39;lerinin kullanılması olayından bahsedeceğim.&lt;/p&gt;

&lt;p&gt;Heroku üzerinde yayına alacağımız uygulamanın boş bir uygulama olması yerine bir kaç işlem yapabildiğimiz bir uygulama olması için &lt;a href="https://github.com/lab2023/cybele/" target="_blank"&gt;Cybele&lt;/a&gt; gem&amp;#39;ini kullanarak bir uygulama oluşturacağım. Kullandığım cybele versiyonu ise 1.9.2&amp;#39;dir.&lt;/p&gt;

&lt;p&gt;Proje oluşturma adımı ile başlayacak olursak;&lt;/p&gt;

&lt;p&gt;Terminalimizden cybele proje oluşturma komutunu çalıştırıyoruz;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    cybele blog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Daha sonrasında ise oluşturulan projemizin README.md dosyasında yeralan uygulama çalıştırılmadan önce yapılması gerekenleri yapıyoruz.
Bu işlemler ise;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Proje dizininde yeralan .env.local değişkenlerini ayarlıyoruz.
Bu ayarlar içinde e-posta göndermek için kullandığımız SMTP ayarları olan aşağıda listelenen ayarlar bulunmaktadır.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="no"&gt;SMTP_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;your_password&lt;/span&gt;
    &lt;span class="no"&gt;SMTP_USER_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;your_user_name&lt;/span&gt;
    &lt;span class="no"&gt;SMTP_ADDRESS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;smtp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;sendgrid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;net&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mail servisi olarak &lt;a href="https://sendgrid.com" target="_blank"&gt;SendGrid&lt;/a&gt; servisi size ücretsiz olarak aylık 12000 e-posta sağlamaktadır. Hobi projeleriniz için bu servisi kullanabilirsiniz. &lt;a href="https://app.sendgrid.com/settings/credentials" target="_blank"&gt;Settings-&amp;gt;Credentials&lt;/a&gt; sayfasından gerekli username ve password&amp;#39;u alabilirsiniz.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hataları izleyebilmek için kullnadığımız Rollbar servisinde aldığımız token&amp;#39;ı config/initializers/rollbar.rb dosyasında yer alan your_token yazan string ile değiştiriyoruz. Rollbar servisi üzerinde projenizi oluşturduğunuzda size doğrudan gerekli token&amp;#39;ı, yönergeleri ile birlikte verecektir.&lt;/li&gt;
&lt;li&gt;User ve Admin model&amp;#39;leri için db/migrate/*.rb  dizininde yeralan migration dosyalarındaki is_active alanının varsayılan değerini true olarak ayarlıyoruz.&lt;/li&gt;
&lt;li&gt;Projenin config/settings.yml dosyasında yeralan username ve password alanlarını değiştiriyoruz.&lt;/li&gt;
&lt;li&gt;Son olarakta projenin public dizini için VERSION.txt dosyası oluşturmak için şu komutu çalıştırıyoruz;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    ln -s ../VERSION.txt VERSION.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Projemizde bu ayarları yaptıktan sonra, uygulamayı çalıştırma işlemlerine geçiyoruz. Bu adımda ise şu komutları sırasıyla çalıştırıyoruz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    bundle
    redis-server
    rake sidekiq:start
    rake db:create
    rake db:migrate
    rake dev:seed
    rails server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Çalışan uygulamanın ekran görüntüsü aşağıdaki resimdeki gibi elde edilecektir.&lt;/p&gt;

&lt;p&gt;&lt;a href="#"&gt;&lt;img alt="cybele-ile-kurulmus-uygulama" src="assets/images/articles/2016-08-04-ruby-on-rails-uygulamasinin-heroku-servisinde-coklu-ortamda-yayinlanmasi/uygulama.png" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ayrıca localhost:3000/hq url&amp;#39;linden de uygulamanın yönetici bölümüne erişebilirsiniz. Yönetici giriş bilgileri db/seeds.rb dosyasında yer almaktadır.&lt;/p&gt;

&lt;p&gt;Buraya kadar normal olarak projemizi oluşturmuş olduk. Şimdi çoklu ortamlarda kullanmak için git&amp;#39;in efektif bir dallanma eklentisi olan &lt;a href="http://danielkummer.github.io/git-flow-cheatsheet/" target="_blank"&gt;git-flow&lt;/a&gt; ile ilgili ayarlara.
Projemizin kök dizininde tanımlamış olduğumuz git yanına git-flow&amp;#39;u tanımlıyoruz. Git&amp;#39;in master branchinde iken şu komut ile git-flow&amp;#39;u aktif hale getiriyoruz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    git flow init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu komut sayesinde release kodlarımızın yani production ortamı için kullanılacak kodlarımız master branch&amp;#39;inde, development kodlarımız yani staging sunucusunda yayınlayacağımız kodlar develop branch&amp;#39;inde tutulacaktır.
Git-flow tanımlama işleminin ardından artık heroku üzerinde uygulama oluşturma bölümüne geçiyoruz.
Heroku üzerinde heabımızı oluşturup giriş yaptıktan sonra yeni bir uygulama oluşturuyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="#"&gt;&lt;img alt="heroku-uzerinde-uygulama-olusturma" src="assets/images/articles/2016-08-04-ruby-on-rails-uygulamasinin-heroku-servisinde-coklu-ortamda-yayinlanmasi/heroku-uygulama-olusturma.png" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oluşturduğumuz uygulamannın ismi eşsiz olmalıdır. Heroku size alt alanadı sağladığı için aynı isimli uygulamara izin vermemektedir.
Biz uygulama ismi olarak lab2023-blog-sample tercih ettik. Bu uygulama production ortamı için kullanacağımız kodları barındıracaktır.
Yukarıdaki adımları izleyerekten tekrar bir uygulama daha oluşturuyoruz. Bu uygulama ise staging ortamımız olacak ve develop branch&amp;#39;indeki kodlarımızı barındıracağız.
Staging ortamı için uygulama ismi olarak staging-lab2023-blog-sample&amp;#39;ı tercih ettik.&lt;/p&gt;

&lt;p&gt;Production ve Staging uygulamalarımızı oluşturduktan sonra bu iki uygulamaya da uygulamnaın detaylar sayfasında bulunan Resources sekmesinden Heroku Postgres::Database, Logentries ve Redis To Go elementlerini şekilde ki gibi ekliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="#"&gt;&lt;img alt="heroku-uzerinde-uygulamaya-element-ekleme" src="assets/images/articles/2016-08-04-ruby-on-rails-uygulamasinin-heroku-servisinde-coklu-ortamda-yayinlanmasi/heroku-uygulamaya-element-ekleme.png" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Heroku Postgres::Database elementi PostgreSQL veritabanı için gereklidir.
Logentries elementi uygulama logları portal üzerinden analiz edebilmemiz için gereklidir.
Redis To Go elementi uygulama içinde kullandığımız Sidekiq arka plan işlerini gerçekleştirebilmemiz için gereklidir.&lt;/p&gt;

&lt;p&gt;Uygulamamız için gerekli elementleri ekledikten sonra sıra geldi heroku uygulamalarımızın git ile ilgili ayarlarını yapma işlemine. Bu işlem için Production uygulamamız olan lab2023-blog-sample uygulamasının Detaylar sayfasından Settings sekmesine geliyoruz. Bu sayfada uygulama ile ilgili bir çok detayı bulabilirsiniz. Info bölümde yer alan Git URL alanındaki linki kopyalıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="#"&gt;&lt;img alt="heroku-uzerinde-uygulama-git-url" src="assets/images/articles/2016-08-04-ruby-on-rails-uygulamasinin-heroku-servisinde-coklu-ortamda-yayinlanmasi/heroku-uzerinde-uygulama-git-url.png" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu kopyaladığımız git url&amp;#39;i terminalden proje dizinimize gelerek, aşağıdaki komutu kullanarak ekliyoruz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    git remote add production https://git.heroku.com/lab2023-blog-sample.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Git komutlarında kullancağınız remote.production.url&amp;#39;in ayarlandığını görmek için, şu komutu kullanabilirsiniz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    git config --list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eğer yanlış bir url eklemesi yaptıysanız şu komutu kullanarak aklediğiniz url&amp;#39;i kaldırabilirsiniz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    git remote remove production
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu uyguladığımız adımlardan terminalden url eklemeye kadar olan adımları aynı şekilde staging uygulaması olan staging-lab2023-blog-sample için de yapıyoruz.
Terminalden git url&amp;#39;i ekleme bölümünde ise şu şekilde ki komutu çalıştırıyoruz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    git remote add staging https://git.heroku.com/staging-lab2023-blog-sample.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu işlemlerden sonra artık uygulamamızın heroku urllerinide eklenmiş olduk.&lt;/p&gt;

&lt;p&gt;Şimdi staging uygulamamıza kodları gönderme kısmına gelelim.
Bu işlemi yapabilmek için heroku uygulamalarına erişimimiz olması gerekmektedir. Heroku sunucularına, git ile uygulama kodlarını gönderebilmek için heroku komutları ile login olmalıyız. Heroku komutlarının kullanılabilmesi için ise &lt;a href="https://toolbelt.heroku.com" target="_blank"&gt;Heroku Toolbelt&lt;/a&gt; kurulumunu yapmalısınız.&lt;/p&gt;

&lt;p&gt;Kurulum yapıldıktan sonra şu komut ile heroku hesabınıza giriş yapabilirsiniz;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    heroku login
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Giriş yaptıktan sonra staging uygulmamızı yayına almak için şu komutu kullanıyoruz;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    git push staging develop:master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu komutta develop:master ile yapılmak istenen develop branch&amp;#39;indeki kodlar heroku üzerinde master branchine aktarılması işlemidir. Heroku uygulamaları master branch&amp;#39;te çalışmaktadır. Bu komutu çalıştırdıktan sonra uygulamamız artık heroku sunucusuna gönderilmiştir, şekilde gördüğünüz gibi.&lt;/p&gt;

&lt;p&gt;&lt;a href="#"&gt;&lt;img alt="heroku-uzerinde-uygulama-calismasi" src="assets/images/articles/2016-08-04-ruby-on-rails-uygulamasinin-heroku-servisinde-coklu-ortamda-yayinlanmasi/heroku-uzerinde-uygulama-calismasi.png" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Proje dizinimizde bulunan Procfile sayesinde bir web bir de worker dynosu çalıştırılabilir duruma gelmiştir. Web dynosu varsayılan olarak direk çalıştırılmıştır. Worker&amp;#39;ı ise uygulama detay sayfasında Resources sekmesinde bulunan sayfadan açmamız gerekmektedir. Worker&amp;#39;ı da çalıştırdıktan sonra uygulamamızın son hali şekildeki gibidir.&lt;/p&gt;

&lt;p&gt;&lt;a href="#"&gt;&lt;img alt="heroku-uzerinde-uygulama-calismasi-2" src="assets/images/articles/2016-08-04-ruby-on-rails-uygulamasinin-heroku-servisinde-coklu-ortamda-yayinlanmasi/heroku-uzerinde-uygulama-calismasi-2.png" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Worker&amp;#39;larımızın sidekiq ayarları config/sidekiq.yml dosyasında bulunmaktadır. Burada production ortamı için concurrency: 25 olarak ayarlanmıştır. Redis To Go ücretsiz paketi düşük özelliklere sahip olduğu için 25 thread&amp;#39;e izin vermemektedir. Bunu 3 olarak ayarlarsak production ortamı içinde problem yaşamadan uygulamamızı yayınlamış oluruz.&lt;/p&gt;

&lt;p&gt;Uygulamamızı sunucuya gönderdik ve web ile worker dynolarını çalışır hale getirdik. Şimdi heroku üzerinde veritabanı için migration dosyalarını koşma ve seed rake&amp;#39;lerini çalıştırma işlemine geçiyoruz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    heroku run rake db:migrate --app staging-lab2023-blog-sample
    heroku run rake dev:seed --app staging-lab2023-blog-sample
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Heroku uygulamasında rails console&amp;#39;a erişmek için gerekli komut;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    heroku run rake console --app staging-lab2023-blog-sample
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bu işlemlerden sonra .env.local dosyamızda tutduğumuz ENV değişkenlerinin heroku üzerinde ayarlanması işlemine geçeçek olursak, şu komut ile bu değişkenleri ayarlayabiliriz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    heroku config:set &lt;span class="nv"&gt;SMTP_ADDRESS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;smtp.sendgrid.net --app staging-lab2023-blog-sample
    heroku config:set &lt;span class="nv"&gt;SSMTP_USER_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_user_name --app staging-lab2023-blog-sample
    heroku config:set &lt;span class="nv"&gt;SMTP_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_password --app staging-lab2023-blog-sample
    heroku config:set &lt;span class="nv"&gt;ROOT_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://staging-lab2023-blog-sample.herokuapp.com --app staging-lab2023-blog-sample
    heroku config:set &lt;span class="nv"&gt;BASIC_AUTH_IS_ACTIVE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes --app staging-lab2023-blog-sample
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ayarlarınızı bu komutlar ile ayarladıktan sonra heroku üzerinde uygulamanın ayarlar sayfasında Config Variables bölümünde bu değişkenleri görebilirsiniz, ayrıca portal üzerinden de bu değişkenleri değiştirebilirsiniz. Herokuya rails uygulaması gönderildiğinde RAILS_ENV varsayılan olarak production olarak ayarlanıyor. RAILS_ENV değerinide staging ile değiştirebilirsiniz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    heroku config:set &lt;span class="nv"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;staging --app staging-lab2023-blog-sample
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Şu komut ile de heroku üzerindeki değişkenlerinizi listeleyebilirsiniz;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    heroku config --app staging-lab2023-blog-sample
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Şu komut ile çalışan dynolarınızı listeleyebilirsiniz;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    heroku ps --app staging-lab2023-blog-sample
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Şu komut ile dynolarınızı(web, worker) yeniden başlatabilirsiniz;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    heroku ps:restart --app staging-lab2023-blog-sample
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Komut bilgilerinin ardından production ortamında uygulamamızı yayınlama işemine gelecek olursak; Şu anda master branch&amp;#39;imizde herhangi bir release kodu bulunmamakta. Git-flow&amp;#39;dan yararlanarak v1.0.0 etiketi ile bir versiyon yayınlayalım.
Bu işlem için gerekli olan komutlar şunlardır;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    git flow release start v1.0.0
    git flow release finish v1.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Git-flow sayesinde çıkardığımız ilk release&amp;#39;i lab2023-blog-sample heroku uygulamamıza göndermek için gerekli komut;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    git push production master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Uygulamamızı production ortamına gönderdik sonra aynı staging ortamında olduğu gibi diğer komutları uygulamaya özel olarak çalıştırıyoruz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    heroku run rake db:migrate --app lab2023-blog-sample
    heroku run rake dev:seed --app lab2023-blog-sample
    heroku config:set &lt;span class="nv"&gt;SMTP_ADDRESS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;smtp.sendgrid.net --app lab2023-blog-sample
    heroku config:set &lt;span class="nv"&gt;SSMTP_USER_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_user_name --app lab2023-blog-sample
    heroku config:set &lt;span class="nv"&gt;SMTP_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_password --app lab2023-blog-sample
    heroku config:set &lt;span class="nv"&gt;ROOT_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://lab2023-blog-sample.herokuapp.com --app lab2023-blog-sample
    heroku config:set &lt;span class="nv"&gt;BASIC_AUTH_IS_ACTIVE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;no --app lab2023-blog-sample
    &lt;span class="c"&gt;# Tek seferde bütün ayarları yapmak isterseniz şu komutu kullanabilirsiniz&lt;/span&gt;
    heroku config:set &lt;span class="nv"&gt;SMTP_ADDRESS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;smtp.sendgrid.net &lt;span class="nv"&gt;SSMTP_USER_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_user_name &lt;span class="nv"&gt;SMTP_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_password &lt;span class="nv"&gt;ROOT_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://lab2023-blog-sample.herokuapp.com &lt;span class="nv"&gt;BASIC_AUTH_IS_ACTIVE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;no --app lab2023-blog-sample
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Uygulamamız da ilk kez bu komutları çalıştırdıktan sonra yeni değişiklikleri sunucuya göndermek için kullanacağımız komutlar;&lt;/p&gt;

&lt;p&gt;Staging ortamı için;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    git push staging develop:master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Production ortamı için;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    git push production master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eğer yeni migration dosyalarınız veya çalıştırmanız gereken özel rake&amp;#39;ler varsa yukarıdaki komutlardaki gibi uygulamayı belirterek çalıştırmanız yeterlidir.&lt;/p&gt;

&lt;p&gt;Gemfile dosyanızda özel github repolarınız varsa bu repolara heroku uygulamanızın erişebilmesi için herokuya özel oluştruduğunuz ssh keylerinizi şu komut ile herokuya ekleyebilirsiniz;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    heroku keys:add ~/.ssh/heroku_id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sık ihtiyac duyabileceğiniz bazı komutların listesi aşğıdaki gibidir;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="c"&gt;# Web dynonusunu yeniden başlatır&lt;/span&gt;
    heroku ps:restart web
    &lt;span class="c"&gt;# Worker dynonusunu yeniden başlatır&lt;/span&gt;
    heroku restart worker
    &lt;span class="c"&gt;# Yapılması gereken ağır işleri farklı dyno büyüklüklerinde çalıştırmak isterseniz&lt;/span&gt;
    heroku run --size&lt;span class="o"&gt;=&lt;/span&gt;standard-2x rake heavy:job
    heroku run --size&lt;span class="o"&gt;=&lt;/span&gt;performance-l rake heavy:job
    &lt;span class="c"&gt;# Uygulama loglarını terminalden izleyebilmeniz için&lt;/span&gt;
    heroku logs
    heroku logs --tail
    heroku logs --source app --tail
    &lt;span class="c"&gt;# Uygulamanın veritabanı bilgilerini listelemek isterseniz&lt;/span&gt;
    heroku pg
    &lt;span class="c"&gt;# Uygulamanın veritabanı yedek alma zaman planı&lt;/span&gt;
    heroku pg:backups schedules
    &lt;span class="c"&gt;# Uygulamanın veritabanın düzenli olarak yedek almasını istiyorsanız&lt;/span&gt;
    heroku pg:backups schedule --at &lt;span class="s1"&gt;'04:00 Europe/Istanbul'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Örnek uygulamaya şu &lt;a href="https://lab2023-blog-sample.herokuapp.com/" target="_blank"&gt;linkten&lt;/a&gt; ulaşabilirsiniz.
Örnek kaynak kodlar ise şu &lt;a href="https://github.com/ismailakbudak/lab2023-blog-sample" target="_blank"&gt;linkten&lt;/a&gt; ulaşabilirsiniz.&lt;/p&gt;

&lt;p&gt;Umarım faydalı bir yazı olmuştur.
İyi çalışmalar..&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Bulutfon Ruby SDK</title>
    <link rel="alternate" href="http://lab2023.com/bulutfon-ruby-sdk.html"/>
    <id>http://lab2023.com/bulutfon-ruby-sdk.html</id>
    <published>2015-12-22T02:00:00+02:00</published>
    <updated>2017-01-26T14:07:26+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;Merhaba,&lt;/p&gt;

&lt;p&gt;Bugün sizlere, gelişiminde bizim de katkıda bulunduğumuz
&lt;a href="https://www.bulutfon.com/?ref=1"&gt;&lt;code&gt;Bulutfon API&lt;/code&gt;&lt;/a&gt; &amp;lsquo;si için &lt;code&gt;Ruby&lt;/code&gt; programlama dili ile yazılmış olan &lt;a href="https://github.com/bulutfon/ruby-sdk"&gt;&lt;code&gt;bulutfon_sdk gem&lt;/code&gt;&lt;/a&gt; &amp;#39;den bahsedecek ve örnek kodlar göstereceğiz.&lt;/p&gt;

&lt;p&gt;Bu gem ile uygulamanızın &lt;a href="https://github.com/bulutfon/documents"&gt;&lt;code&gt;Bulutfon API Servisi&lt;/code&gt;&lt;/a&gt; ile kolayca haberleşmesini sağlayabileceksiniz. SMS gönderme, arama kayıtlarına erişme, otomatik arama
oluşturma gibi birçok özelliği hızlı bir şekilde uygulmalarınıza entegre edebileceksiniz. &lt;a href="http://api.bulutfon.com/docs"&gt;&lt;code&gt;Bulutfon API&lt;/code&gt;&lt;/a&gt; ile daha fazla neler yapabileceğiniz hakkında bilgi almak için
&lt;a href="https://github.com/bulutfon/documents"&gt;https://github.com/bulutfon/documents&lt;/a&gt; adresine göz atabilirsiniz.&lt;/p&gt;

&lt;p&gt;Sözü daha fazla uzatmadan örnek kodlara geçelim;&lt;/p&gt;

&lt;h1 id="bulutfon_sdk-gem-&amp;#39;inin-yüklü-olduğundan-emin-oluyoruz."&gt;bulutfon_sdk gem &amp;#39;inin yüklü olduğundan emin oluyoruz.&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'bulutfon_sdk'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfon-hesabınızdan-almanız-gereken-api-master-token"&gt;Bulutfon hesabınızdan almanız gereken API master token&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'your_token'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="hesap-ile-ilgili-işlemler"&gt;Hesap ile ilgili işlemler&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;bulutfon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="hesap-detayları"&gt;Hesap detayları&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;details&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfon-üzerinden-erişebileceğiniz-nesneler.-ayrıca-bu-nesneleri-ayrı-ayrı-kullanmak-isterseniz-alt-bölümlerdeki-kodları-inceleyeniz."&gt;Bulutfon üzerinden erişebileceğiniz nesneler. Ayrıca bu nesneleri ayrı ayrı kullanmak isterseniz alt bölümlerdeki kodları inceleyeniz.&lt;/h1&gt;

&lt;h1 id="Örneğin-sms-göndermek-için-bulutfonsdk::rest::message-sınıfını-yanlız-başına-kullanabilirsiniz.-alt-kısımda-örneği-bulunmaktadır."&gt;Örneğin SMS göndermek için &lt;code&gt;BulutfonSDK::REST::Message&lt;/code&gt; sınıfını yanlız başına kullanabilirsiniz. Alt kısımda örneği bulunmaktadır.&lt;/h1&gt;

&lt;h1 id="bulutfonsdk::rest::message-objesi"&gt;BulutfonSDK::REST::Message objesi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;messages&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfonsdk::rest::messagetitle-objesi"&gt;BulutfonSDK::REST::MessageTitle objesi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message_titles&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfonsdk::rest::did-objesi"&gt;BulutfonSDK::REST::Did objesi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dids&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfonsdk::rest::extension-objesi"&gt;BulutfonSDK::REST::Extension objesi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;extensions&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfonsdk::rest::group-objesi"&gt;BulutfonSDK::REST::Group objesi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;groups&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfonsdk::rest::cdr-objesi"&gt;BulutfonSDK::REST::Cdr objesi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;cdrs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfonsdk::rest::callrecord-objesi"&gt;BulutfonSDK::REST::CallRecord objesi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;call_records&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfonsdk::rest::incomingfax-objesi"&gt;BulutfonSDK::REST::IncomingFax objesi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;incoming_faxes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfonsdk::rest::outgoingfax-objesi"&gt;BulutfonSDK::REST::OutgoingFax objesi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;outgoing_faxes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfonsdk::rest::announcement-objesi"&gt;BulutfonSDK::REST::Announcement objesi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;announcements&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="bulutfonsdk::rest::automaticcall-objesi"&gt;BulutfonSDK::REST::AutomaticCall objesi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;bulutfon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;automatic_calls&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="santrale-bağlı-telefon-numaraları"&gt;Santrale bağlı telefon numaraları&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;did&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Did&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="santrale-bağlı-telefon-numaralarını-listeler"&gt;Santrale bağlı telefon numaralarını listeler&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;did&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="id-&amp;#39;si-verilen-santral-numarasının-detaylarını-getirir"&gt;Id &amp;#39;si verilen santral numarasının detaylarını getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;did&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="dahililer"&gt;Dahililer&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;extension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Extension&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="dahililerin-hepsini-getirir"&gt;Dahililerin hepsini getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="id-&amp;#39;si-verilen-dahili-detaylarını-getirir"&gt;Id &amp;#39;si verilen dahili detaylarını getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="yeni-bir-dahili-oluşturma-işlemi"&gt;Yeni bir dahili oluşturma işlemi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;full_name: &lt;/span&gt;&lt;span class="s1"&gt;'Deneme'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;email: &lt;/span&gt;&lt;span class="s1"&gt;'deneme@deneme.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;did: &lt;/span&gt;&lt;span class="s1"&gt;'905xxxxxxxxx'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;number: &lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;redirection_type: &lt;/span&gt;&lt;span class="s1"&gt;'NONE'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;destination_type: &lt;/span&gt;&lt;span class="s1"&gt;'EXTENSION'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;destination_number: &lt;/span&gt;&lt;span class="s1"&gt;'905xxxxxxxxx'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'acl[]'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'domestic'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'gsm'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'international'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="dahili-güncelleme-işlemi"&gt;Dahili güncelleme işlemi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;full_name: &lt;/span&gt;&lt;span class="s1"&gt;'Deneme Deneme'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'acl[]'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'domestic'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'gsm'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="dahili-silme-işlemi"&gt;Dahili silme işlemi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="gruplar"&gt;Gruplar&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="grupları-listeler"&gt;Grupları listeler&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="id-&amp;#39;si-verilen-grup-detaylarını-getirir"&gt;Id &amp;#39;si verilen grup detaylarını getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="arama-kayıtları"&gt;Arama kayıtları&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;cdr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Cdr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="tüm-arama-kayıtlarını-listeler"&gt;Tüm arama kayıtlarını listeler&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;cdr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="arama-kayıtlarını-sayfalama-yaparak-getirir"&gt;Arama kayıtlarını sayfalama yaparak getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;cdr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="ss"&gt;page: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;limit: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="uuid-&amp;#39;si-verilen-arama-kaydı-detaylarını-getirir"&gt;Uuid &amp;#39;si verilen arama kaydı detaylarını getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;cdr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'uuid'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="ses-kayıtları"&gt;Ses kayıtları&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;call_record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;CallRecord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="uuid-&amp;#39;si-verilen-ses-kaydının-bilgilerini-getirir"&gt;Uuid &amp;#39;si verilen ses kaydının bilgilerini getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;call_record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'uuid'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="uuid-&amp;#39;si-verilen-ses-kaydını-verilen-save_path-dosyasına-kayıt-eder"&gt;Uuid &amp;#39;si verilen ses kaydını verilen save_path dosyasına kayıt eder&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;save_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/save_uuid.ogg"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;call_record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'uuid'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;save_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="gelen-fakslar"&gt;Gelen fakslar&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;incoming_fax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;IncomingFax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="gelen-faksları-listeler"&gt;Gelen faksları listeler&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;incoming_fax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="uuid-&amp;#39;si-verilen-gelen-faks-detaylarını-getirir"&gt;Uuid &amp;#39;si verilen gelen faks detaylarını getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;incoming_fax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'uuid'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="uuid-&amp;#39;si-verilen-gelen-faks-dosyasını-save_path-dosyasını-kayıt-eder"&gt;Uuid &amp;#39;si verilen gelen faks dosyasını save_path dosyasını kayıt eder&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;save_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/save_uuid.tiff"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;incoming_fax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'uuid'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;save_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="giden-fakslar"&gt;Giden fakslar&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;outgoing_fax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;OutgoingFax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="giden-faksları-listeler"&gt;Giden faksları listeler&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;outgoing_fax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="id-&amp;#39;si-verilen-giden-faks-detaylarını-getirir"&gt;Id &amp;#39;si verilen giden faks detaylarını getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;outgoing_fax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="giden-faks-oluşturma-işlemi"&gt;Giden faks oluşturma işlemi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/pdf-sample.pdf"&lt;/span&gt;
&lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'Deneme'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;receivers: &lt;/span&gt;&lt;span class="s1"&gt;'905xxxxxxxxx'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;did: &lt;/span&gt;&lt;span class="s1"&gt;'905xxxxxxxxx'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;attachment: &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;outgoing_fax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="ses-dosyaları"&gt;Ses Dosyaları&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;announcement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Announcement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="ses-dosyalarını-listeler"&gt;Ses dosyalarını listeler&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;announcement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="id-&amp;#39;si-verilen-ses-dosyası-detaylarını-getirir"&gt;Id &amp;#39;si verilen ses dosyası detaylarını getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;announcement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="ses-dosyası-oluşturur"&gt;Ses dosyası oluşturur&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/test.wav"&lt;/span&gt;
&lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s1"&gt;'Deneme'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;announcement: &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;announcement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="id-&amp;#39;si-verilen-ses-dosyasını,-veilen-dosya-yoluna-kayıt-eder"&gt;Id &amp;#39;si verilen ses dosyasını, veilen dosya yoluna kayıt eder&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;save_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/save_test.wav"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;announcement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;save_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="id-&amp;#39;si-verilen-ses-dosyasını-siler"&gt;Id &amp;#39;si verilen ses dosyasını siler&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;announcement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="otomatik-aramalar"&gt;Otomatik Aramalar&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;automatic_call&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;AutomaticCall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="otomatik-aramalar-listesini-getirir"&gt;Otomatik aramalar listesini getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;automatic_call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="id-&amp;#39;si-verilen-otomatik-arama-detaylarını-geitirir"&gt;Id &amp;#39;si verilen otomatik arama detaylarını geitirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;automatic_call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="otomatik-arama-oluşturur-ve-oluşturma-işleminden-sonra-receivers-numaraları-aranır."&gt;Otomatik arama oluşturur ve oluşturma işleminden sonra receivers numaraları aranır.&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'Automatic call after creation'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;receivers: &lt;/span&gt;&lt;span class="s1"&gt;'905xxxxxxxxx'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;did: &lt;/span&gt;&lt;span class="s1"&gt;'905xxxxxxxxx'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;announcement_id: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;automatic_call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="zaman-planlı-otomatik-arama-oluşturulur,-bu-parametrelerde,-receivers-numaraları-perşembe-günü-10:15-ve-12:00-saatleri-arasında-aranır."&gt;Zaman planlı otomatik arama oluşturulur, Bu parametrelerde, receivers numaraları perşembe günü 10:15 ve 12:00 saatleri arasında aranır.&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'Time planned call'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;receivers: &lt;/span&gt;&lt;span class="s1"&gt;'905xxxxxxxxx'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;did: &lt;/span&gt;&lt;span class="s1"&gt;'905xxxxxxxxx'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;announcement_id: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;mon_active: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;tue_active: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;wed_active: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;thu_active: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;thu_start: &lt;/span&gt;&lt;span class="s1"&gt;'10:15'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;thu_finish: &lt;/span&gt;&lt;span class="s1"&gt;'12:00'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;fri_active: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;sat_active: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;sun_active: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;hours_active: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;automatic_call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="mesaj-başlıkları"&gt;Mesaj Başlıkları&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MessageTitle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="mesaj-başlıklarını-listeler"&gt;Mesaj başlıklarını listeler&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message_title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="mesajlar"&gt;Mesajlar&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BulutfonSDK&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="mesajları-listeler"&gt;Mesajları listeler&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="mesajları-sayfalama-yapılarak-listelenir"&gt;Mesajları sayfalama yapılarak listelenir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="ss"&gt;page: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;limit: &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="id-&amp;#39;si-verilen-mesaj-detaylarını-getirir"&gt;Id &amp;#39;si verilen mesaj detaylarını getirir&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="sms-mesajı-oluşturma-işlemi"&gt;SMS mesajı oluşturma işlemi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'CONFIRMED_MESSAGE_TITLE'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;content: &lt;/span&gt;&lt;span class="s1"&gt;'Test Message'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;receivers: &lt;/span&gt;&lt;span class="s1"&gt;'905xxxxxxxxx'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="Çok-alıcılı-mesja-gönderme-işlemi"&gt;Çok alıcılı mesja gönderme işlemi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;params_multiple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'CONFIRMED_MESSAGE_TITLE'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;content: &lt;/span&gt;&lt;span class="s1"&gt;'Multiple Message'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;receivers: &lt;/span&gt;&lt;span class="s1"&gt;'905xxxxxxxxx,905xxxxxxxxx'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params_multiple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="zaman-planlı-mesaj-gönderme-işlemi"&gt;Zaman planlı mesaj gönderme işlemi&lt;/h1&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'CONFIRMED_MESSAGE_TITLE'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;content: &lt;/span&gt;&lt;span class="s1"&gt;'Planned message example'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;receivers: &lt;/span&gt;&lt;span class="s1"&gt;'905xxxxxxxxx'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;is_future_sms: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;send_date: &lt;/span&gt;&lt;span class="s1"&gt;'16/12/2015 10:00'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kaynakça,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.bulutfon.com/?ref=1"&gt;https://bulutfon.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bulutfon/documents"&gt;https://github.com/bulutfon/documents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bulutfon/ruby-sdk"&gt;https://github.com/bulutfon/ruby-sdk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://api.bulutfon.com/docs"&gt;http://api.bulutfon.com/docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devforums.bulutfon.com/"&gt;http://devforums.bulutfon.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ruby on Rails Uygulamasının Capistrano 3 ile Kolayca Yayınlanması</title>
    <link rel="alternate" href="http://lab2023.com/ruby-on-rails-uygulamasinin-capistrano-3-ile-kolayca-yayinlanmasi.html"/>
    <id>http://lab2023.com/ruby-on-rails-uygulamasinin-capistrano-3-ile-kolayca-yayinlanmasi.html</id>
    <published>2015-12-21T02:00:00+02:00</published>
    <updated>2017-01-26T14:07:26+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;Merhaba,&lt;/p&gt;

&lt;p&gt;Sizlere Ubuntu-14.04 sunucusunu sıfırdan ayağa kaldırıp, kendi rails uygulamalarınızı sunucuya hızlı bir şekilde aktarabileceğiniz &lt;a href="https://github.com/capistrano/capistrano" target="_blank"&gt;Capistrano&lt;/a&gt; uygulamasından bahsedecek ve bazı kaynak kodlar paylaşacağız.
Kullandığımız capistrano&amp;#39;nun versiyonu 3.4&amp;#39;tür. Sunucu üzerinde kullanıdığımız ruby versiyonu ise 2.2.3&amp;#39;tür. Capistrano &amp;lsquo;nun kaynak kodlarına &lt;a href="https://github.com/capistrano/capistrano" target="_blank"&gt;github&lt;/a&gt; adresinden erişip göz atabilirsiniz.
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD&lt;/p&gt;

&lt;h1 id="Örnek-olarak,-netinternet-&amp;#39;ten-veya-digitalocean-&amp;#39;dan-alacağınız-bir-sunucuyu-aşağıdaki-bash-scriptleri-ile-2-3-saat-içinde-ayağa-kaldırıp-nginx,-postgresql,-unicorn-ayarlarını-yaparak-çalışır-hale-getirebilirsiniz."&gt;Örnek olarak, &lt;a href="https://www.netinternet.com.tr/vps-sunucular"&gt;Netinternet&lt;/a&gt; &amp;#39;ten veya &lt;a href="https://www.digitalocean.com/"&gt;DigitalOcean&lt;/a&gt; &amp;#39;dan alacağınız bir sunucuyu aşağıdaki bash scriptleri ile 2-3 saat içinde ayağa kaldırıp Nginx, Postgresql, Unicorn ayarlarını yaparak çalışır hale getirebilirsiniz.&lt;/h1&gt;

&lt;p&gt;Örnek olarak, &lt;a href="http://www.netinternet.com.tr/panel/aff.php?aff=916"&gt;Netinternet&lt;/a&gt; &amp;#39;ten veya &lt;a href="https://www.digitalocean.com/"&gt;DigitalOcean&lt;/a&gt; &amp;#39;dan alacağınız bir sunucuyu aşağıdaki bash scriptleri ile 2-3 saat içinde ayağa kaldırıp Nginx, Postgresql, Unicorn ayarlarını yaparak çalışır hale getirebilirsiniz.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;hotfix/v1.11.2.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sunucuda ruby ortamı için temel kurulum scripti aşağıdaki gibidir. Bu script root kullanıcısı olarak bağlanıp çalıştırmalısınız.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Run this script with root user&lt;/span&gt;
&lt;span class="c"&gt;## Fancy echo&lt;/span&gt;
fancy_echo&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;%b&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
fancy_echo &lt;span class="s2"&gt;"Updating system packages ..."&lt;/span&gt;
apt-get -y update
apt-get -y upgrade
fancy_echo &lt;span class="s2"&gt;"Installing python-software-properties..."&lt;/span&gt;
apt-get -y install python-software-properties
fancy_echo &lt;span class="s2"&gt;"Installing software-properties-common..."&lt;/span&gt;
apt-get -y install software-properties-common
fancy_echo &lt;span class="s2"&gt;"Exporting language"&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LANGUAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;en_US.UTF-8 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;en_US.UTF-8 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LC_ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;en_US.UTF-8 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; locale-gen en_US.UTF-8 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; dpkg-reconfigure locales
fancy_echo &lt;span class="s2"&gt;"Installing libraries for common gem dependencies ..."&lt;/span&gt;
apt-get -y install autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev
apt-get install git-core openssl curl libreadline-dev libxslt1-dev libcurl4-openssl-dev ruby-dev make make-doc
fancy_echo &lt;span class="s2"&gt;"Installing nodejs ..."&lt;/span&gt;
add-apt-repository -y ppa:chris-lea/node.js
apt-get -y update
apt-get -y install nodejs
apt-get -y install libxslt-dev libxml2-dev
fancy_echo &lt;span class="s2"&gt;"Installing imagemagick ..."&lt;/span&gt;
apt-get install -y imagemagick
fancy_echo &lt;span class="s2"&gt;"Installing nginx ..."&lt;/span&gt;
add-apt-repository -y ppa:nginx/stable
apt-get -y update
apt-get -y install nginx
service nginx start
fancy_echo &lt;span class="s2"&gt;"Installing postgresql ..."&lt;/span&gt;
apt-get -y install postgresql libpq-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sunucuda deploy kullanıcısı için kurulum scripti aşağıdaki gibidir. Bu script&amp;#39;ide root kullanıcısı olarak bağlanıp çalıştırmalısınız.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Deploy group&lt;/span&gt;
&lt;span class="nv"&gt;deploy_group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;deploy
&lt;span class="c"&gt;# Deploy user&lt;/span&gt;
&lt;span class="nv"&gt;deploy_user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;deploy
&lt;span class="c"&gt;# Github usernames for access with ssh to deploy user&lt;/span&gt;
&lt;span class="nv"&gt;usernames&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;tayfunoziserikan ismailakbudak&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Check user is exist&lt;/span&gt;
id -u &lt;span class="nv"&gt;$deploy_user&lt;/span&gt; &amp;amp;&amp;gt; /dev/null
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -ne 0 &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Add &lt;/span&gt;&lt;span class="nv"&gt;$deploy_group&lt;/span&gt;&lt;span class="s2"&gt; group"&lt;/span&gt;
  groupadd &lt;span class="nv"&gt;$deploy_group&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Creating user &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  useradd -m -g &lt;span class="nv"&gt;$deploy_group&lt;/span&gt; -s /bin/bash &lt;span class="nv"&gt;$deploy_user&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Adding user &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt; to sudoers"&lt;/span&gt;
  chmod +w /etc/sudoers
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt; ALL=(ALL) ALL"&lt;/span&gt; &amp;gt;&amp;gt; /etc/sudoers
  chmod -w /etc/sudoers
&lt;span class="k"&gt;else
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt; user already exists"&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="c"&gt;# Check user is exist, maybe some errors occured&lt;/span&gt;
id -u &lt;span class="nv"&gt;$deploy_user&lt;/span&gt; &amp;amp;&amp;gt; /dev/null
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -ne 0 &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt; user does not exists"&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="c"&gt;# Prepare ssh keys environment&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Add .ssh directory to &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nb"&gt;test&lt;/span&gt; -d /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -ne 0 &lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;then
    &lt;/span&gt;mkdir /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh
    &lt;span class="c"&gt;# change user permisisions&lt;/span&gt;
    &lt;span class="c"&gt;# 700 =&amp;gt; (owner read/write/execute, group none, other none)&lt;/span&gt;
    chmod 700 /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh
    chown &lt;span class="nv"&gt;$deploy_user&lt;/span&gt; /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh
    chgrp &lt;span class="nv"&gt;$deploy_group&lt;/span&gt; /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh
  &lt;span class="k"&gt;fi
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Get usernames public keys from GitHub and add them to &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt; authorized_keys"&lt;/span&gt;
  &lt;span class="k"&gt;for &lt;/span&gt;username &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;usernames&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;; &lt;span class="k"&gt;do
    &lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;.keys
    wget https://github.com/&lt;span class="nv"&gt;$name&lt;/span&gt; --no-check-certificate -O &lt;span class="nv"&gt;$name&lt;/span&gt;
    cat &lt;span class="nv"&gt;$name&lt;/span&gt; &amp;gt;&amp;gt; /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh/authorized_keys
    rm &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="c"&gt;# remove temprory file&lt;/span&gt;
  &lt;span class="k"&gt;done&lt;/span&gt;
  &lt;span class="c"&gt;# change user permisisions&lt;/span&gt;
  &lt;span class="c"&gt;# 600 =&amp;gt; (owner read/write, group none, other none)&lt;/span&gt;
  chmod 600 /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh/authorized_keys
  chown &lt;span class="nv"&gt;$deploy_user&lt;/span&gt; /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh/authorized_keys
  chgrp &lt;span class="nv"&gt;$deploy_group&lt;/span&gt; /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh/authorized_keys
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Completed..."&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Sunucuda deploy kullanıcısı için ruby ortamını hazırlama scripti aşağıdaki gibidir. Bu script deploy kullanıcısı olarak bağlanıp çalıştırmalısınız.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Run this command with deploy user&lt;/span&gt;
&lt;span class="c"&gt;# define user home path&lt;/span&gt;
&lt;span class="nv"&gt;user_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/deploy
&lt;span class="c"&gt;## Fancy echo&lt;/span&gt;
fancy_echo&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;%b&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
fancy_echo &lt;span class="s2"&gt;"Installing rbenv..."&lt;/span&gt;
git clone git://github.com/sstephenson/rbenv.git &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.rbenv
fancy_echo &lt;span class="s2"&gt;"Writing rbenv path to bashrc ..."&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'export PATH=\"$HOME/.rbenv/bin:$PATH\"'&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.bashrc
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'eval "$(rbenv init -)"'&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.bashrc
fancy_echo &lt;span class="s2"&gt;"Exporting rbenv path..."&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.rbenv/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;rbenv init -&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
fancy_echo &lt;span class="s2"&gt;"Preparing rbenv plugins..."&lt;/span&gt;
mkdir -p &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.rbenv/plugins
git clone https://github.com/sstephenson/ruby-build.git &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.rbenv/plugins/ruby-build
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"'&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.bashrc
git clone https://github.com/sstephenson/rbenv-gem-rehash.git &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.rbenv/plugins/rbenv-gem-rehash
&lt;span class="c"&gt;## Ruby environment&lt;/span&gt;
&lt;span class="nv"&gt;RUBY_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"2.2.3"&lt;/span&gt;
fancy_echo &lt;span class="s2"&gt;"Installing Ruby &lt;/span&gt;&lt;span class="nv"&gt;$RUBY_VERSION&lt;/span&gt;&lt;span class="s2"&gt; ..."&lt;/span&gt;
rbenv install &lt;span class="nv"&gt;$RUBY_VERSION&lt;/span&gt;
rbenv rehash
rbenv global &lt;span class="nv"&gt;$RUBY_VERSION&lt;/span&gt;
ruby -v
fancy_echo &lt;span class="s2"&gt;"Gem update system ..."&lt;/span&gt;
gem update --system
fancy_echo &lt;span class="s2"&gt;"Echo .gemrc..."&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'gem: --no-rdoc --no-ri'&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.gemrc
gem install bundler
gem install backup
rbenv rehash
fancy_echo &lt;span class="s2"&gt;"Export path ..."&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"export PATH="&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:/usr/bin&lt;span class="s2"&gt;""&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.bashrc
&lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nv"&gt;$SHELL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Bu scriptler ile sunucunuzu bir rails uygulamasını çalıştıracak duruma getirmiş olursunuz.&lt;/p&gt;

&lt;p&gt;Şimdi bir rails uygulaması oluşturup, uygulamayı bir sunucuya aktarma işlemlerini anlatacağız.
&lt;a href="https://en.wikipedia.org/wiki/Ruby_on_Rails" target="_blank"&gt;Ruby On Rails&lt;/a&gt; bildiğiniz ruby dili ile, &lt;a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" target="_blank"&gt;MVC(Model-View-Controller)&lt;/a&gt; mimari deseni ile geliştirilmiş ve bünyesinde &lt;a href="https://en.wikipedia.org/wiki/Don't_repeat_yourself" target="_blank"&gt;DRY(Don&amp;rsquo;t Repeat Yourself)&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Convention_over_configuration" target="_blank"&gt;CoC(Convetion over configuration)&lt;/a&gt; gibi yazılım felsefelerini barındıran açık kaynak bir uygulama çatısıdır.&lt;/p&gt;

&lt;p&gt;Hızlı bir Ruby On Rails uygulaması çıkarmak istiyorsanız size &lt;a href="https://rubygems.org/gems/cybele" target="_blank"&gt;Cybele&lt;/a&gt; ruby gem&amp;#39;ini öneririz. Bu gem bir uygulamada olması gereken kullanıcı giriş, bilgi güncelleme, yönetici tarafına giriş işlemleri gibi her projede kullanacağınız kısımlar hazır bir taslak olarak geliyor. Bu sayede önceden yazdığınız kodları tekrar yazmak zorunda kalmıyorsunuz. Cybele geminin taslak olarak getirdiği Gemfile &amp;#39;ı &lt;a href="https://github.com/lab2023/cybele/blob/develop/templates/cybele_Gemfile"&gt;github&lt;/a&gt; adresinden inceleyebilirsiniz.
Sunucuya kolay bir şekilde uygulamayı taşımak için kullancağımız gemler bu Gemfile &amp;#39;da yer almaktadır.
Eğer &lt;code&gt; rails new project_name&lt;/code&gt; şeklinde sıfırdan bir proje oluşturursanız veya halihazırda bulunan bir projenizi sunucuya taşımak isterseniz, kullanacağımız komutlar dizisinin yer aldığı &lt;a href="https://github.com/lab2023/recipes_matic"&gt;recipes_matic&lt;/a&gt; gemini incelemenizi tavsiye ederiz.&lt;/p&gt;

&lt;p&gt;Cybele ile oluşturduğumuz bir proje için bu adımları anlatacagız.
&lt;ol&gt;
    &lt;li&gt;Proje oluştur &lt;code&gt;$ cybele project_name&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Deploy repo bilgilerini düzenle &lt;code&gt;/config/deploy.rb&lt;/code&gt;
&lt;pre&gt; set :repo_url, &amp;#39;&lt;a href="mailto:git@github.com"&gt;git@github.com&lt;/a&gt;:your_username/your_repo_name.git&amp;#39;&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt;Production deploy bilgilerini düzenle &lt;code&gt; /config/deploy/production.rb &lt;/code&gt;
&lt;pre&gt;
server &lt;q&gt;example.com&lt;/q&gt;, user: &lt;q&gt;#{fetch(:local_user)}&lt;/q&gt;, roles: %w{app db web}, primary: true, port: 22
set :rails_env, &amp;#39;production&amp;#39;
set :branch, &amp;#39;master&amp;#39;
set :project_domain, “example.com”
&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt;Staging deploy bilgilerini düzenle &lt;code&gt;/config/deploy/staging.rb&lt;/code&gt;
&lt;pre&gt;
server &lt;q&gt;staging.example.com&lt;/q&gt;, user: &lt;q&gt;#{fetch(:local_user)}&lt;/q&gt;, roles: %w{app db web}, primary: true, port: 22
set :rails_env, &amp;#39;staging&amp;#39;
set :branch, &amp;#39;develop&amp;#39;
set :project_domain, “staging.example.com”
&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt;Hata bildirimleri için email adresini düzenle
 &lt;br/&gt; &lt;code&gt;config/environments/production.rb &lt;/code&gt;&lt;br/&gt; &lt;code&gt;config/environments/staging.rb&lt;/code&gt;
&lt;pre&gt;config.middleware.use ExceptionNotification::Rack,
:email =&amp;gt; {
  :email_prefix =&amp;gt; &lt;q&gt;[project_name]&lt;/q&gt;,
  :sender_address =&amp;gt; %{&lt;q&gt;Notifier&lt;/q&gt; &amp;lt;&lt;a href="mailto:notifier@project_name.com"&gt;notifier@project_name.com&lt;/a&gt;&amp;gt;},
  :exception_recipients =&amp;gt; %w{&lt;a href="mailto:your_email@address.com"&gt;your_email@address.com&lt;/a&gt;}
}
&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt;Aşağıdaki dosyalarda SMTP ayarlarını ayarla &lt;br/&gt;&lt;code&gt;config/settings/staging.yml&lt;/code&gt;&lt;br/&gt;&lt;code&gt;config/settings/production.yml&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Github da bulunan private repolara lokaldeki gibi erismek icin şu komutları çalıştır
            &lt;br/&gt;&lt;code&gt;$ eval &lt;code&gt;ssh-agent -s&lt;/code&gt;&lt;/code&gt; &lt;br/&gt;&lt;code&gt;$ ssh-add &lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Gelelim terminalden çalıştırmamız gereken komutlar dizisine,Production sunucusunda ki deploy ortamının hazır olup olmadığını kontrol eder.
&lt;code&gt;$ bundle exec cap production deploy:check&lt;/code&gt;
Production sunucusunda nginx, postgresql, unicorn, &lt;a href="http://meskyanichi.github.io/backup/v3/"&gt;backup&lt;/a&gt;(veritabanı yedek alma gemi) gibi ayarları yapar.
&lt;code&gt;$ bundle exec cap production deploy:prepare&lt;/code&gt;
Production sunucusuna deploy işlemini gerçekleştirir.
&lt;code&gt;$ bundle exec cap production deploy&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Örnek dosyalarımızda şu şekilde olmalıdır.
Proje anadizininde bulunan Capfile örneği:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Load DSL and set up stages&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'capistrano/setup'&lt;/span&gt;
&lt;span class="c1"&gt;# Include default deployment tasks&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'capistrano/deploy'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'capistrano/rails'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'capistrano/bundler'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'sshkit/sudo'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'capistrano/maintenance'&lt;/span&gt;
&lt;span class="c1"&gt;# Include tasks from other gems included in your Gemfile&lt;/span&gt;
&lt;span class="c1"&gt;# For documentation on these, see for example:&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/rvm&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/rbenv&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/chruby&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/bundler&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/rails&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/passenger&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/rvm'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/rbenv'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/chruby'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/bundler'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/rails/assets'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/rails/migrations'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/passenger'&lt;/span&gt;
&lt;span class="c1"&gt;# Load custom tasks from `lib/capistrano/tasks` if you have any defined&lt;/span&gt;
&lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'lib/capistrano/tasks/*.rake'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Proje config dizininde bulunan deploy.rb örneği:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# config valid only for current version of Capistrano&lt;/span&gt;
&lt;span class="n"&gt;lock&lt;/span&gt; &lt;span class="s1"&gt;'3.4.0'&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:application&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'appname'&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:local_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'deploy'&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:stages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sx"&gt;%w(staging production)&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:default_stage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'production'&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:repo_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"git@github.com:username/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.git"&lt;/span&gt;
&lt;span class="c1"&gt;# Default branch is :master&lt;/span&gt;
&lt;span class="c1"&gt;# ask :branch, `git rev-parse --abbrev-ref HEAD`.chomp&lt;/span&gt;
&lt;span class="c1"&gt;# Default deploy_to directory is /var/www/blog2&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:deploy_to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"/home/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:local_user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/apps/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for :scm is :git&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:scm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:git&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for :format is :pretty&lt;/span&gt;
&lt;span class="c1"&gt;# set :format, :pretty&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for :log_level is :debug&lt;/span&gt;
&lt;span class="c1"&gt;# set :log_level, :debug&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for :pty is false&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:pty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for :linked_files is []&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:linked_files&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:linked_files&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]).&lt;/span&gt;&lt;span class="nf"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'config/database.yml'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for linked_dirs is []&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:linked_dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:linked_dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]).&lt;/span&gt;&lt;span class="nf"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'log'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tmp/pids'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tmp/cache'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tmp/sockets'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'vendor/bundle'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'public/system'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'public/upload'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'public/images'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'public/seat_images'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for default_env is {}&lt;/span&gt;
&lt;span class="c1"&gt;# set :default_env, { path: "/opt/ruby/bin:$PATH" }&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:default_env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;path: &lt;/span&gt;&lt;span class="s1"&gt;'$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for keep_releases is 5&lt;/span&gt;
&lt;span class="c1"&gt;# set :keep_releases, 5&lt;/span&gt;
&lt;span class="c1"&gt;# Look our recipes&lt;/span&gt;
&lt;span class="c1"&gt;# https://github.com/lab2023/recipes_matic&lt;/span&gt;
&lt;span class="nb"&gt;load&lt;/span&gt; &lt;span class="s1"&gt;'config/deploy/recipes/base.rb'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Umarım faydalı bir yazı olmuştur.
Kolay gelsin.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Deploy Ruby on Rails Application Quickly With Capistrano 3</title>
    <link rel="alternate" href="http://lab2023.com/deploy-ruby-on-rails-application-quickly-with-capistrano.html"/>
    <id>http://lab2023.com/deploy-ruby-on-rails-application-quickly-with-capistrano.html</id>
    <published>2015-12-21T02:00:00+02:00</published>
    <updated>2017-01-26T14:07:26+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;In this post, We will write about the  &lt;a href="https://github.com/capistrano/capistrano" target="_blank"&gt;Capistrano&lt;/a&gt;  deploy tool on &lt;code&gt;Ruby On Rails(ROR)&lt;/code&gt; and We will share some code blocks
that is a bash script for starting the server from beginning. We are using Ubuntu-14.04 server. Capistrano version is 3.4. Ruby version on our server is 2.2.3. Capistrano is an open source project,
if you want to look the source code, you can visit the &lt;a href="https://github.com/capistrano/capistrano" target="_blank"&gt;github&lt;/a&gt; page.
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD&lt;/p&gt;

&lt;h1 id="for-example-you-can-use-netinternet-or-digitalocean-server-suppliers.-you-can-prepare-your-server-within-2-3-hours-with-the-following-bash-scripts."&gt;For example you can use &lt;a href="https://www.netinternet.com.tr/ssd-vds-sunucular"&gt;Netinternet&lt;/a&gt; or &lt;a href="https://www.digitalocean.com/"&gt;DigitalOcean&lt;/a&gt; server suppliers. You can prepare your server within 2-3 hours w&lt;span id="result_box" class="short_text" lang="en"&gt;&lt;span class="hps"&gt;ith&lt;/span&gt; &lt;span class="hps"&gt;the following bash&lt;/span&gt; &lt;span class="hps"&gt;scripts.&lt;/h1&gt;

&lt;p&gt;For example you can use &lt;a href="http://www.netinternet.com.tr/panel/aff.php?aff=916"&gt;Netinternet&lt;/a&gt; or &lt;a href="https://www.digitalocean.com/"&gt;DigitalOcean&lt;/a&gt; server suppliers. You can prepare your server within 2-3 hours w&lt;span id="result_box" class="short_text" lang="en"&gt;&lt;span class="hps"&gt;ith&lt;/span&gt; &lt;span class="hps"&gt;the following bash&lt;/span&gt; &lt;span class="hps"&gt;scripts.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;hotfix/v1.11.2.0
Those bash scripts prepare basic environment for Ruby libraries and create &lt;code&gt;deploy user&lt;/code&gt; for using on deployment process.  Also one of them prepares Ruby environment under the &lt;code&gt;deploy user&lt;/code&gt; home folder(default &lt;code&gt;deploy user&lt;/code&gt; name you can change it  before to run scripts)&lt;/span&gt;&lt;/span&gt; .&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;Base installation bash script for Ruby environment is as follows. You must run this script as a root user.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Run this script with root user&lt;/span&gt;
&lt;span class="c"&gt;## Fancy echo&lt;/span&gt;
fancy_echo&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;%b&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
fancy_echo &lt;span class="s2"&gt;"Updating system packages ..."&lt;/span&gt;
apt-get -y update
apt-get -y upgrade
fancy_echo &lt;span class="s2"&gt;"Installing python-software-properties..."&lt;/span&gt;
apt-get -y install python-software-properties
fancy_echo &lt;span class="s2"&gt;"Installing software-properties-common..."&lt;/span&gt;
apt-get -y install software-properties-common
fancy_echo &lt;span class="s2"&gt;"Exporting language"&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LANGUAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;en_US.UTF-8 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;en_US.UTF-8 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LC_ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;en_US.UTF-8 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; locale-gen en_US.UTF-8 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; dpkg-reconfigure locales
fancy_echo &lt;span class="s2"&gt;"Installing libraries for common gem dependencies ..."&lt;/span&gt;
apt-get -y install autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev
apt-get install git-core openssl curl libreadline-dev libxslt1-dev libcurl4-openssl-dev ruby-dev make make-doc
fancy_echo &lt;span class="s2"&gt;"Installing nodejs ..."&lt;/span&gt;
add-apt-repository -y ppa:chris-lea/node.js
apt-get -y update
apt-get -y install nodejs
apt-get -y install libxslt-dev libxml2-dev
fancy_echo &lt;span class="s2"&gt;"Installing imagemagick ..."&lt;/span&gt;
apt-get install -y imagemagick
fancy_echo &lt;span class="s2"&gt;"Installing nginx ..."&lt;/span&gt;
add-apt-repository -y ppa:nginx/stable
apt-get -y update
apt-get -y install nginx
service nginx start
fancy_echo &lt;span class="s2"&gt;"Installing postgresql ..."&lt;/span&gt;
apt-get -y install postgresql libpq-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Deploy user creating script is as follows. You must run this script as a root user too.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Deploy group&lt;/span&gt;
&lt;span class="nv"&gt;deploy_group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;deploy
&lt;span class="c"&gt;# Deploy user&lt;/span&gt;
&lt;span class="nv"&gt;deploy_user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;deploy
&lt;span class="c"&gt;# Github usernames for access with ssh to deploy user&lt;/span&gt;
&lt;span class="nv"&gt;usernames&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;tayfunoziserikan ismailakbudak&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Check user is exist&lt;/span&gt;
id -u &lt;span class="nv"&gt;$deploy_user&lt;/span&gt; &amp;amp;&amp;gt; /dev/null
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -ne 0 &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Add &lt;/span&gt;&lt;span class="nv"&gt;$deploy_group&lt;/span&gt;&lt;span class="s2"&gt; group"&lt;/span&gt;
  groupadd &lt;span class="nv"&gt;$deploy_group&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Creating user &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  useradd -m -g &lt;span class="nv"&gt;$deploy_group&lt;/span&gt; -s /bin/bash &lt;span class="nv"&gt;$deploy_user&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Adding user &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt; to sudoers"&lt;/span&gt;
  chmod +w /etc/sudoers
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt; ALL=(ALL) ALL"&lt;/span&gt; &amp;gt;&amp;gt; /etc/sudoers
  chmod -w /etc/sudoers
&lt;span class="k"&gt;else
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt; user already exists"&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="c"&gt;# Check user is exist, maybe some errors occured&lt;/span&gt;
id -u &lt;span class="nv"&gt;$deploy_user&lt;/span&gt; &amp;amp;&amp;gt; /dev/null
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -ne 0 &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt; user does not exists"&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="c"&gt;# Prepare ssh keys environment&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Add .ssh directory to &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nb"&gt;test&lt;/span&gt; -d /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -ne 0 &lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;then
    &lt;/span&gt;mkdir /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh
    &lt;span class="c"&gt;# change user permisisions&lt;/span&gt;
    &lt;span class="c"&gt;# 700 =&amp;gt; (owner read/write/execute, group none, other none)&lt;/span&gt;
    chmod 700 /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh
    chown &lt;span class="nv"&gt;$deploy_user&lt;/span&gt; /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh
    chgrp &lt;span class="nv"&gt;$deploy_group&lt;/span&gt; /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh
  &lt;span class="k"&gt;fi
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Get usernames public keys from GitHub and add them to &lt;/span&gt;&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;&lt;span class="s2"&gt; authorized_keys"&lt;/span&gt;
  &lt;span class="k"&gt;for &lt;/span&gt;username &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;usernames&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;; &lt;span class="k"&gt;do
    &lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$username&lt;/span&gt;.keys
    wget https://github.com/&lt;span class="nv"&gt;$name&lt;/span&gt; --no-check-certificate -O &lt;span class="nv"&gt;$name&lt;/span&gt;
    cat &lt;span class="nv"&gt;$name&lt;/span&gt; &amp;gt;&amp;gt; /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh/authorized_keys
    rm &lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="c"&gt;# remove temprory file&lt;/span&gt;
  &lt;span class="k"&gt;done&lt;/span&gt;
  &lt;span class="c"&gt;# change user permisisions&lt;/span&gt;
  &lt;span class="c"&gt;# 600 =&amp;gt; (owner read/write, group none, other none)&lt;/span&gt;
  chmod 600 /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh/authorized_keys
  chown &lt;span class="nv"&gt;$deploy_user&lt;/span&gt; /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh/authorized_keys
  chgrp &lt;span class="nv"&gt;$deploy_group&lt;/span&gt; /home/&lt;span class="nv"&gt;$deploy_user&lt;/span&gt;/.ssh/authorized_keys
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"* Completed..."&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This script  is preparing ruby environment for &lt;code&gt;deploy user&lt;/code&gt;. You should run this script as a &lt;code&gt;deploy user&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Run this command with deploy user&lt;/span&gt;
&lt;span class="c"&gt;# define user home path&lt;/span&gt;
&lt;span class="nv"&gt;user_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/deploy
&lt;span class="c"&gt;## Fancy echo&lt;/span&gt;
fancy_echo&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;%b&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
fancy_echo &lt;span class="s2"&gt;"Installing rbenv..."&lt;/span&gt;
git clone git://github.com/sstephenson/rbenv.git &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.rbenv
fancy_echo &lt;span class="s2"&gt;"Writing rbenv path to bashrc ..."&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'export PATH=\"$HOME/.rbenv/bin:$PATH\"'&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.bashrc
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'eval "$(rbenv init -)"'&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.bashrc
fancy_echo &lt;span class="s2"&gt;"Exporting rbenv path..."&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.rbenv/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;rbenv init -&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
fancy_echo &lt;span class="s2"&gt;"Preparing rbenv plugins..."&lt;/span&gt;
mkdir -p &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.rbenv/plugins
git clone https://github.com/sstephenson/ruby-build.git &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.rbenv/plugins/ruby-build
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"'&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.bashrc
git clone https://github.com/sstephenson/rbenv-gem-rehash.git &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.rbenv/plugins/rbenv-gem-rehash
&lt;span class="c"&gt;## Ruby environment&lt;/span&gt;
&lt;span class="nv"&gt;RUBY_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"2.2.3"&lt;/span&gt;
fancy_echo &lt;span class="s2"&gt;"Installing Ruby &lt;/span&gt;&lt;span class="nv"&gt;$RUBY_VERSION&lt;/span&gt;&lt;span class="s2"&gt; ..."&lt;/span&gt;
rbenv install &lt;span class="nv"&gt;$RUBY_VERSION&lt;/span&gt;
rbenv rehash
rbenv global &lt;span class="nv"&gt;$RUBY_VERSION&lt;/span&gt;
ruby -v
fancy_echo &lt;span class="s2"&gt;"Gem update system ..."&lt;/span&gt;
gem update --system
fancy_echo &lt;span class="s2"&gt;"Echo .gemrc..."&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'gem: --no-rdoc --no-ri'&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.gemrc
gem install bundler
gem install backup
rbenv rehash
fancy_echo &lt;span class="s2"&gt;"Export path ..."&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"export PATH="&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:/usr/bin&lt;span class="s2"&gt;""&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$user_path&lt;/span&gt;/.bashrc
&lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nv"&gt;$SHELL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Your server is ready to run ROR application  with those scripts.&lt;/p&gt;

&lt;p&gt;Now We will write about deployment process for simple application.
As you know &lt;a href="https://en.wikipedia.org/wiki/Ruby_on_Rails" target="_blank"&gt;ROR&lt;/a&gt; has been developed with Ruby programming language,  developing with &lt;a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" target="_blank"&gt;MVC(Model-View-Controller)&lt;/a&gt; open source web framework and it includes principles like &lt;a href="https://en.wikipedia.org/wiki/Don't_repeat_yourself" target="_blank"&gt;DRY(Don&amp;rsquo;t Repeat Yourself)&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Convention_over_configuration" target="_blank"&gt;CoC(Convetion over configuration)&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;If you want to create rails application quickly, you should look the &lt;a href="https://rubygems.org/gems/cybele" target="_blank"&gt;Cybele Ruby Gem&lt;/a&gt; . This gem provides useful gem list and creates common pages for using in every application like user register, user login, update login and profile info, admin login. Thus you don&amp;rsquo;t repeat yourself on every new project. You can look the template Gemfile of Cybele gem, also from &lt;a href="https://github.com/lab2023/cybele/blob/develop/templates/cybele_Gemfile"&gt;github&lt;/a&gt;.  Some useful deploy gems are on this file.
If you create project  &lt;code&gt;rails new project_name&lt;/code&gt;  command or if you want to deploy project that is already initialized, my deploy commands is in this &lt;a href="https://github.com/lab2023/recipes_matic"&gt;recipes_matic&lt;/a&gt; gem, you should look that.&lt;/p&gt;

&lt;p&gt;We will show deploy steps using with cybele gem.
&lt;ol&gt;
    &lt;li&gt;Create project &lt;code&gt;$ cybele project_name&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Edit deploy repo on this file &lt;code&gt;/config/deploy.rb&lt;/code&gt;
&lt;pre&gt; set :repo_url, &amp;#39;&lt;a href="mailto:git@github.com"&gt;git@github.com&lt;/a&gt;:your_username/your_repo_name.git&amp;#39;&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt;Edit production deploy settings on this file &lt;code&gt; /config/deploy/production.rb &lt;/code&gt;
&lt;pre&gt;
server &lt;q&gt;example.com&lt;/q&gt;, user: &lt;q&gt;#{fetch(:local_user)}&lt;/q&gt;, roles: %w{app db web}, primary: true, port: 22
set :rails_env, &amp;#39;production&amp;#39;
set :branch, &amp;#39;master&amp;#39;
set :project_domain, “example.com”
&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt;Edit staging deploy settings on this file &lt;code&gt;/config/deploy/staging.rb&lt;/code&gt;
&lt;pre&gt;
server &lt;q&gt;staging.example.com&lt;/q&gt;, user: &lt;q&gt;#{fetch(:local_user)}&lt;/q&gt;, roles: %w{app db web}, primary: true, port: 22
set :rails_env, &amp;#39;staging&amp;#39;
set :branch, &amp;#39;develop&amp;#39;
set :project_domain, “staging.example.com”
&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt; Edit your_email address for to get info about the occurred errors
&lt;br/&gt;&lt;code&gt;config/environments/production.rb &lt;/code&gt;&lt;br/&gt; &lt;code&gt;config/environments/staging.rb&lt;/code&gt;
&lt;pre&gt;config.middleware.use ExceptionNotification::Rack,
:email =&amp;gt; {
  :email_prefix =&amp;gt; &lt;q&gt;[project_name]&lt;/q&gt;,
  :sender_address =&amp;gt; %{&lt;q&gt;Notifier&lt;/q&gt; &amp;lt;&lt;a href="mailto:notifier@project_name.com"&gt;notifier@project_name.com&lt;/a&gt;&amp;gt;},
  :exception_recipients =&amp;gt; %w{&lt;a href="mailto:your_email@address.com"&gt;your_email@address.com&lt;/a&gt;}
}
&lt;/pre&gt;
&lt;/li&gt;
    &lt;li&gt;Edit yout SMTP settings on those files &lt;br/&gt;&lt;code&gt;config/settings/staging.yml&lt;/code&gt;&lt;br/&gt; &lt;code&gt;config/settings/production.yml&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;If you have private repo on github, run this commands in order for to access repo from server &lt;br/&gt;&lt;code&gt;$ eval &lt;code&gt;ssh-agent -s&lt;/code&gt;&lt;/code&gt;&lt;br/&gt; &lt;code&gt;$ ssh-add &lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Let&amp;rsquo;s deploy our application with capistrano,
Check production server is ready to deployment
&lt;code&gt;$ bundle exec cap production deploy:check&lt;/code&gt;
Setup nginx, postgresql, unicorn, &lt;a href="http://meskyanichi.github.io/backup/v3/"&gt;backup&lt;/a&gt;(backup gem for to get database backup before deploy) for production server.
&lt;code&gt;$ bundle exec cap production deploy:prepare&lt;/code&gt;
Do deploy to production server.
&lt;code&gt;$ bundle exec cap production deploy&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Example Capfile file under project root directory&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Load DSL and set up stages&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'capistrano/setup'&lt;/span&gt;
&lt;span class="c1"&gt;# Include default deployment tasks&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'capistrano/deploy'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'capistrano/rails'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'capistrano/bundler'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'sshkit/sudo'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'capistrano/maintenance'&lt;/span&gt;
&lt;span class="c1"&gt;# Include tasks from other gems included in your Gemfile&lt;/span&gt;
&lt;span class="c1"&gt;# For documentation on these, see for example:&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/rvm&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/rbenv&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/chruby&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/bundler&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/rails&lt;/span&gt;
&lt;span class="c1"&gt;#   https://github.com/capistrano/passenger&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/rvm'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/rbenv'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/chruby'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/bundler'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/rails/assets'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/rails/migrations'&lt;/span&gt;
&lt;span class="c1"&gt;# require 'capistrano/passenger'&lt;/span&gt;
&lt;span class="c1"&gt;# Load custom tasks from `lib/capistrano/tasks` if you have any defined&lt;/span&gt;
&lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'lib/capistrano/tasks/*.rake'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example deploy.rb file under project config directory&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# config valid only for current version of Capistrano&lt;/span&gt;
&lt;span class="n"&gt;lock&lt;/span&gt; &lt;span class="s1"&gt;'3.4.0'&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:application&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'appname'&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:local_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'deploy'&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:stages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sx"&gt;%w(staging production)&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:default_stage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'production'&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:repo_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"git@github.com:username/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.git"&lt;/span&gt;
&lt;span class="c1"&gt;# Default branch is :master&lt;/span&gt;
&lt;span class="c1"&gt;# ask :branch, `git rev-parse --abbrev-ref HEAD`.chomp&lt;/span&gt;
&lt;span class="c1"&gt;# Default deploy_to directory is /var/www/blog2&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:deploy_to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"/home/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:local_user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/apps/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for :scm is :git&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:scm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:git&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for :format is :pretty&lt;/span&gt;
&lt;span class="c1"&gt;# set :format, :pretty&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for :log_level is :debug&lt;/span&gt;
&lt;span class="c1"&gt;# set :log_level, :debug&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for :pty is false&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:pty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for :linked_files is []&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:linked_files&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:linked_files&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]).&lt;/span&gt;&lt;span class="nf"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'config/database.yml'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for linked_dirs is []&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:linked_dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:linked_dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]).&lt;/span&gt;&lt;span class="nf"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'log'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tmp/pids'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tmp/cache'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tmp/sockets'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'vendor/bundle'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'public/system'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'public/upload'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'public/images'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'public/seat_images'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for default_env is {}&lt;/span&gt;
&lt;span class="c1"&gt;# set :default_env, { path: "/opt/ruby/bin:$PATH" }&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="ss"&gt;:default_env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;path: &lt;/span&gt;&lt;span class="s1"&gt;'$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# Default value for keep_releases is 5&lt;/span&gt;
&lt;span class="c1"&gt;# set :keep_releases, 5&lt;/span&gt;
&lt;span class="c1"&gt;# Look our recipes&lt;/span&gt;
&lt;span class="c1"&gt;# https://github.com/lab2023/recipes_matic&lt;/span&gt;
&lt;span class="nb"&gt;load&lt;/span&gt; &lt;span class="s1"&gt;'config/deploy/recipes/base.rb'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We hope it is a useful post for you.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>İkinci Rails Girls Denizli Etkinliği</title>
    <link rel="alternate" href="http://lab2023.com/ikinci-rails-girls-denizli-etkinligi.html"/>
    <id>http://lab2023.com/ikinci-rails-girls-denizli-etkinligi.html</id>
    <published>2015-12-02T02:00:00+02:00</published>
    <updated>2017-01-26T14:07:26+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://railsgirls.com/"&gt;Rails Girls&lt;/a&gt; Finlandiya’da kurulmuş bir topluluktur. Amacı Rails kodlayan kadın sayısını artırmaktır.
Rails Girls topluluğu birçok ülkede başarılı projelere imza atmaktadır. Ülkemizde daha önce 2013 Ekim ayında
&lt;a href="http://railsgirls.com/istanbul"&gt;Rails Girls İstanbul&lt;/a&gt;, 2014 Mart ayında  &lt;a href="http://railsgirls.com/ankara"&gt;Rails Girls Ankara&lt;/a&gt;, 2014 Mayıs ayında da &lt;a href="http://railsgirls.com/denizli"&gt;Rails Girls Denizli&lt;/a&gt; etkinlikleri
düzenlenmiştir. Türkiye’de 4. kez düzenlenen Rails Girls etkinliği &lt;a href="http://lab2023.com/"&gt;Lab2023&lt;/a&gt;&amp;lsquo;ün organizatörlüğünde Denizli ’de ikinci kez düzenleniyor.
2. Rails Girls Denizli etkinliği 11 - 12 Aralık tarihleri arasında Pamukkale Teknokent Konferans salonunda gerçekleşecek.
Etkinliğe katılım ve bilgi almak için &lt;a href="http://railsgirls.com/denizli2015"&gt;railsgirls.com/denizli2015&lt;/a&gt; adresini ziyaret edebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://railsgirls.com/denizli2015"&gt;&lt;img alt="railsgirlsdenizli2014" src="assets/images/articles/2015-12-02-rails-girls-denizli-etkinligi/railsgirls2014.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rails, Ruby programlama diliyle yazılmış, açık kaynak kodlu bir web uygulama geliştirme çerçevesidir.
Sade ve kısa bir sözdizimi sayesinde kullanıcı sayısı her geçen gün artmaktadır. Bu etkinliğin amacı her
yaştan kadının Rails’i tanıması, web dünyasını öğrenmesi ve küçük web uygulamaları yapabilmeleridir.
Bu uygulamalar sayesinde kadınlar kod yazmanın zor olmadığını farketmeye başlayacak ve ön yargılarından
kurtulacaklardır. Etkinliğe yanlarında bir kadının eşlik etmesi halinde konuyla ilgilenen erkeklerde katılabiliyor.&lt;/p&gt;

&lt;p&gt;Rails Girls etkinliğini en güzel yanlarından birisi de Rails konusunda uzman kişilerin etkinlik sırasında
size mentorluk etmesi ve yönlendirmesi. Etkinliğe katılmak için programcılık bilgisine sahip olmanıza gerek yoktur.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://lab2023.com/"&gt;Lab2023&lt;/a&gt; organizatörlüğünde  11 - 12 Aralık 2015 tarihleri arasında Denizli’de &lt;a href="http://pauteknokent.com.tr/teknokent/"&gt;Pamukkale Teknokent&lt;/a&gt;, &lt;a href="https://www.bulutfon.com/?ref=1"&gt;Bulutfon&lt;/a&gt;, &lt;a href="http://www.netinternet.com.tr/panel/aff.php?aff=916"&gt;Netinternet&lt;/a&gt;, &lt;a href="http://www.soroptimistdenizli.org/"&gt;Denizli Soroptimistik Kulübü&lt;/a&gt;,
&lt;a href="http://www.denizlihs.org/"&gt;Denizli Hackerspace&lt;/a&gt; ve &lt;a href="http://lab2023.com/"&gt;Lab2023&lt;/a&gt; &amp;#39;ün sponsorluk destekleriyle gerçekleşecek olan Rails Girls etkinliğinin programı şu şekildedir.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Cuma akşamı katılımcılar ve mentörler ile tanışma ve kurulum partisi yapılacaktır. Bu partide cumartesi günü neler yapılacağı
anlatılacak ve katılımcıların bilgisayarlarına gerekli programların kurulması sağlanacaktır.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cumartesi günü ise eğitime başlanacak ve küçük uygulamalar yapılarak bir proje ortaya çıkarılacak.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu güzel etkinliğe son katılım tarihi, 6 Aralık &amp;#39;tır.&lt;/p&gt;

&lt;p&gt;Katılmak için &lt;a href="http://railsgirls.com/denizli2015"&gt;railsgirls.com/denizli2015&lt;/a&gt; adresindeki formu doldurmanız yeterli.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href="http://railsgirls.com/denizli2015"&gt;&lt;img alt="railsgirlsdenizli" src="assets/images/articles/2015-12-02-rails-girls-denizli-etkinligi/railsgirlsdenizli2015.png" /&gt;&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Popüler front-end araçları</title>
    <link rel="alternate" href="http://lab2023.com/populer-front-end-araclari.html"/>
    <id>http://lab2023.com/populer-front-end-araclari.html</id>
    <published>2015-11-24T02:00:00+02:00</published>
    <updated>2015-11-24T23:40:28+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;Teknolojinin geldiği konum ve ulaşılabilirliğinin artmasıyla web teknolojileri hayatımızda farklı bir noktaya yükseldi. Genel anlamda gelişen teknolojide önyüz kodlayıcıları için faydalı bazı araçları tanıtacağım.&lt;/p&gt;

&lt;h3 id="bower"&gt;Bower&lt;/h3&gt;

&lt;p&gt;&lt;img alt="bower" src="assets/images/articles/25-09-08-tools-for-front-end/bower.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Bower bir front-end kütüphanesidir. Diğerlerinden ayıran özelliği ise projemizde kullanacağımız paketi kurduğumuzda bu paketin çalışması için gerekli olan diğer paketleri de kurması.&lt;/p&gt;

&lt;p&gt;Mesela bootstrap’ı indirdiğimizde jquery’ide indiriyor.&lt;/p&gt;

&lt;h3 id="kurulumu:"&gt;Kurulumu:&lt;/h3&gt;

&lt;p&gt;Npm kullanarak kuracağız. Bower paket yöneticisini kullanabilmemiz için bilgisayarımızda &lt;a href="https://nodejs.org/en/"&gt;nodejs&lt;/a&gt; ve &lt;a href="https://git-scm.com/"&gt;git&lt;/a&gt;’in kurulu olması gerekiyor.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm install -g bower
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="paket-kurulumu:"&gt;Paket Kurulumu:&lt;/h3&gt;

&lt;p&gt;Şimdi binlerce paket içerisinden istediğimizi kullanabiliriz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower install bootstrap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Çıktısı:&lt;/p&gt;

&lt;p&gt;&lt;img alt="bower" src="assets/images/articles/25-09-08-tools-for-front-end/bower-bootstrap.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Kulanmak istediğimiz paketin tam adını, github proje linkini, proje linkini ya da github proje uzantısını yazarak kurabiliriz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower install twbs/bootstrap
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower install git://github.com/twbs/bootstrap
&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower install http://example.com/script.js
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="init"&gt;init&lt;/h3&gt;

&lt;p&gt;Bower’ın bir diğer güzel özelliği ise projemizde kullandıgımız paketleri&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutu ile json dosyası olarak saklaması ve dosya sayesinde aynı paketleri baska projelerde de kullanabilmesi. Bu sayede farklı bir projede yine aynı paketleri kullanacaksak yaptığımız işlem sayısını azaltmıs oluyoruz.&lt;/p&gt;

&lt;p&gt;Oluşturduğumuz bu bower.json dosyasını kullanmak istediğimiz projenin dizinine ekleyip&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;kodunu çalıştırmamız yeterli oluyor.&lt;/p&gt;

&lt;p&gt;Diyelim ki bower init komutunu çalıştırdıktan sonra projeye yeni paketler dahil ettik ve bunlarıda .json dosyamıza eklemek istiyoruz. Bu işlemide&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower install paket-adi --save
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ya da&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower install paket-adi -s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutu ile yapabiliyoruz.&lt;/p&gt;

&lt;h3 id="list"&gt;list&lt;/h3&gt;

&lt;p&gt;Projenizde kullandığınız paketleri&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutuyla konsolda listeyebilirsiniz.&lt;/p&gt;

&lt;h3 id="search"&gt;search&lt;/h3&gt;

&lt;p&gt;Aradığınız paketin adıyla arama yaptırabilirsiniz.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower search paket-adi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Çıktısı:
&lt;img alt="bower" src="assets/images/articles/25-09-08-tools-for-front-end/bower-search.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="update"&gt;update&lt;/h3&gt;

&lt;p&gt;Kurduğumuz paketleri güncellemek istersek&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutu ile kurulu bütün paketleri,&lt;/p&gt;

&lt;p&gt;çıktısı:&lt;/p&gt;

&lt;p&gt;&lt;img alt="bower" src="assets/images/articles/25-09-08-tools-for-front-end/bower-update.jpg" /&gt;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower update paket-adi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ile de sadece güncellemek istediğimiz paketi güncelletebiliyoruz.&lt;/p&gt;

&lt;p&gt;çıktısı:&lt;/p&gt;

&lt;p&gt;&lt;img alt="bower" src="assets/images/articles/25-09-08-tools-for-front-end/bower-update-name.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="uninstall"&gt;uninstall&lt;/h3&gt;

&lt;p&gt;Kurduğumuz paketi projeden kaldırmak istersek,&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bower uninstall paket-adi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutunu kullanıyoruz, json dosyasından da kaldırmak için &amp;ndash;save komutunu eklememiz gerekiyor.&lt;/p&gt;

&lt;p&gt;Bower’ın özellikleri tabii ki bu kadar değil. &lt;a href="http://bower.io/"&gt;www.bower.io&lt;/a&gt; adresinden bütün detaylara ulaşabilirsiniz.&lt;/p&gt;

&lt;h3 id="gulp"&gt;Gulp&lt;/h3&gt;

&lt;p&gt;&lt;img alt="gulp" src="assets/images/articles/25-09-08-tools-for-front-end/gulp.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Bu araç sayesinde projemizin rutin işlerini otomatize edebiliyoruz. Hepimiz web sayfasını yayına almadan önce bazı bazı işlemleri tekrar tekrar yapıyoruz. Kullandığımız fotoğrafların boyutlarını değiştirmek, css dosyamızı küçültmek, yazdığımız js’leri tek dosya haline getirmek gibi. Bu ve bunlar gibi rutin işlerimizi gulp sayesinde otomatize edebiliriz.&lt;/p&gt;

&lt;p&gt;Şimdi ilk olarak gulpjs&amp;#39;i makinemize kuralım. Gulp da bower ve grunt gibi npm’e gereksinim duyuyor. Gulp kullanacağımız modülleri npm veritabanından çekiyor.&lt;/p&gt;

&lt;h3 id="kurulumu:"&gt;Kurulumu:&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm install gulp -g
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Projemize ya da localimize kurduktan sonra gulpfile.js dosyası oluşturup yaptıracağımız görevleri buraya yazıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;img alt="gulp" src="assets/images/articles/25-09-08-tools-for-front-end/gulp-js.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Verdiğimiz görevler için kurulan plugin ya da paketler ise node_modules/ klasörü altına ekleniyor.&lt;/p&gt;

&lt;p&gt;Sonrasında ise işimize yarayacak paketleri bulup entegre edeceğiz. Bu paketleride istersek &lt;a href="http://gulpjs.com/plugins/"&gt;gulpjs&lt;/a&gt;&amp;lsquo;in sayfasından istersekte &lt;a href="https://www.npmjs.com/"&gt;npmjs&lt;/a&gt;&amp;#39;in sayfasından bulabılırız.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
npm install paket-adi

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;yukarıdakı komut satırıda paketleri kurmaya yarıyor. Paket kurulumundan sonra kurduğumuz paketin parametrelerini gulpfile.js dosyamıza eklememiz gerekiyor.
Aşağıdaki gulpfile.js dosyasında &lt;a href="https://www.npmjs.com/package/gulp-concat"&gt;gulp-concat&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/gulp-coffee"&gt;gulp-coffee&lt;/a&gt; ve &lt;a href="https://www.npmjs.com/package/gulp-uglify"&gt;gulp-uglify&lt;/a&gt; eklentileri kullanılmış.&lt;/p&gt;

&lt;p&gt;&lt;img alt="gulp" src="assets/images/articles/25-09-08-tools-for-front-end/gulp-ext.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Kurduğumuz paketler proje dosyamızın içindeki node_modules dosyasına ekleniyor.&lt;/p&gt;

&lt;p&gt;İstediğimiz paketleri kurduktan ve gulpfile.js dosyasına ekledikten sonra ise komut satırına&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gulp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;yazdığımızda bütün görevleri çalıştırıyor.&lt;/p&gt;

&lt;p&gt;Gulpjs için daha detaylı bilgiye &lt;a href="http://gulpjs.com/"&gt;www.gulpjs.com&lt;/a&gt; adresinden ulaşabilirsiniz.&lt;/p&gt;

&lt;h3 id="grunt"&gt;Grunt&lt;/h3&gt;

&lt;p&gt;&lt;img alt="grunt" src="assets/images/articles/25-09-08-tools-for-front-end/grunt.jpeg" /&gt;&lt;/p&gt;

&lt;p&gt;Gruntta tıpkı gulpjs gibi bir iş kolaylaştırıcı. Kullandığı modülleri npm veri tabanından çekiyor.&lt;/p&gt;

&lt;h3 id="kurulumu:"&gt;Kurulumu:&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; npm install grunt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Grunt için kullanacağımız plug-in ya da modüller içinde&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm install paket-adi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutunu kullabiliyoruz.&lt;/p&gt;

&lt;p&gt;Kurduktan sonra node_modules/ klasörü oluşturuyor, bu klasörde kuracağımız paket ve pluginler tutuluyor.&lt;/p&gt;

&lt;p&gt;Şimdi grunt.js dosyası oluşturup görevlerimizi oraya yazacağız. Genel olarak gulpjs&amp;#39;le aynı yapıda. Farklılıkları görev yazma aşamasında ortaya çıkıyor.&lt;/p&gt;

&lt;p&gt;&lt;img alt="grunt" src="assets/images/articles/25-09-08-tools-for-front-end/grunt-sample.jpeg" /&gt;&lt;/p&gt;

&lt;p&gt;Yukarıda kaynağı grunt-project dizininde bulunan sample.js dosyasını add-sample.min.js dosyasına dönüştürecek görev için yazılmış kodlar yer alıyor.&lt;/p&gt;

&lt;p&gt;Kurduğumuz plugin&amp;#39;lerin açıklamaları ve parametreleri github ya da kendi sayfalarında yazıyor.&lt;/p&gt;

&lt;p&gt;Pluginleri &lt;a href="http://gruntjs.com/plugins"&gt;gruntjs&lt;/a&gt;&amp;#39;in sayfasından ya da &lt;a href="https://www.npmjs.com/"&gt;npmjs&lt;/a&gt;&amp;#39;in sayfasından bulup kurabilirsiniz. Kullanabileceğimiz bütün metotlara gruntjs&amp;#39;in &lt;a href="http://gruntjs.com/api/grunt"&gt;API&lt;/a&gt; sayfasından ulaşabilirsiniz.&lt;/p&gt;

&lt;p&gt;Daha detaylı bilgi için  &lt;a href="http://gruntjs.com/"&gt;www.gruntjs.com&lt;/a&gt; adresini inceleyebilirsiniz.&lt;/p&gt;

&lt;h3 id="yeoman"&gt;Yeoman&lt;/h3&gt;

&lt;p&gt;&lt;img alt="yeoman" src="assets/images/articles/25-09-08-tools-for-front-end/yeoman.jpeg" /&gt;&lt;/p&gt;

&lt;p&gt;Yeoman npm&amp;#39;i kullanarak sürecimizi hızlandıran bir diğer front-end aracımız. Projemiz için template olusturuyor.&lt;/p&gt;

&lt;p&gt;Bilgisayarımıza kurabilmek için node.js ve git in yüklü olması gerekıyor.&lt;/p&gt;

&lt;h3 id="kurulumu"&gt;Kurulumu&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm install yo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutuyla yükleyebiliyoruz.&lt;/p&gt;

&lt;p&gt;Yeoman gruntjs ve bower araçlarını default olarak projeye dahil ediyor.&lt;/p&gt;

&lt;p&gt;oluşturmak istediğimiz projede kullanacağımız paketleri &lt;a href="http://yeoman.io/generators/"&gt;generators&lt;/a&gt; ya da &lt;a href="https://www.npmjs.com/"&gt;npmjs&lt;/a&gt; sayfasından bulup inceleyebilirsiniz.&lt;/p&gt;

&lt;p&gt;Paket kurulumu için:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm install --global paket-adi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Paketi kurup yo komutunu çalıştırarak ya da&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yo paket-adi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutunu çalıştırarak template oluşturabiliriz.&lt;/p&gt;

&lt;p&gt;Çalıştırmak için komut satırına:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutunu yazıyoru.&lt;/p&gt;

&lt;p&gt;&lt;img alt="yeoman" src="assets/images/articles/25-09-08-tools-for-front-end/yeoman-yo.jpeg" /&gt;&lt;/p&gt;

&lt;p&gt;Yukarıda yo komutundan sonra sistemde yüklü template yapılarını secip kullanabileceğimiz gibi install a generator komutunu seçerekte yeni template yükleyebiliyoruz.&lt;/p&gt;

&lt;p&gt;Yukarıda bahsettiğim bütün araçlar paket kurmak için npm&amp;#39;e ihtiyac duyuyor. Bu yuzden plug-in ve paket kurulumları aynı.&lt;/p&gt;

&lt;p&gt;Yeoman ile html5 template’i oluşturmak istiyorsak&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm install --global generator-h5bp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutunu kullanarak önce html5 paketini indiriyoruz. Sonrada&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yp h5bp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutu ile template oluşturuyoruz.&lt;/p&gt;

&lt;p&gt;Detaylı bilgi için  &lt;a href="http://yeoman.io/"&gt;www.yeoman.com&lt;/a&gt; adresini inceleyebilirsiniz.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>What is vagrant and properties of vagrant?</title>
    <link rel="alternate" href="http://lab2023.com/what_is_vagrant_and_properties_of_vagrant.html"/>
    <id>http://lab2023.com/what_is_vagrant_and_properties_of_vagrant.html</id>
    <published>2014-12-25T02:00:00+02:00</published>
    <updated>2015-11-24T23:26:50+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;h3 id="properties-of-vagrant"&gt;Properties of Vagrant&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Vagrant&lt;/code&gt; is a tool which runs your application in a virtual machine, which means
you can create your project environment in a virtual machine. Thanks to Vagrant, you can clone your local environment in a virtual machine.
So, when you send your project to &lt;code&gt;server&lt;/code&gt;, you don&amp;rsquo;t see any bugs or errors on your server.
On the other hand, vagrant is useful while you are working in a team.&lt;/p&gt;

&lt;h3 id="how-to-set-up-vagrant-on-ubuntu-desktop"&gt;How to Set Up Vagrant on Ubuntu Desktop&lt;/h3&gt;

&lt;p&gt;To install and use vagrant, you should follow the steps below respectively.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s look, how to set up and use &lt;code&gt;Vagrant in Ubuntu desktop&lt;/code&gt;,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install Vagrant&lt;/li&gt;
&lt;li&gt;Create Vagrant folders&lt;/li&gt;
&lt;li&gt;Install precise32 box&lt;/li&gt;
&lt;li&gt;Set up new virtual machine&lt;/li&gt;
&lt;li&gt;Install virtual machine configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="1)-install-vagrant"&gt;1) Install Vagrant&lt;/h3&gt;

&lt;p&gt;Installing vagrant on your Ubuntu desktop is very easy. Open your terminal and write the command below.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;sudo apt-get install vagrant
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="2)-create-vagrant-folders"&gt;2) Create Vagrant Folders&lt;/h3&gt;

&lt;p&gt;Continue on terminal, write below commands,&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;mkdir Vagrant
&lt;span class="gp"&gt;$ &lt;/span&gt;mkdir Vagrant/Projects
&lt;span class="gp"&gt;$ &lt;/span&gt;mkdir Vagrant/Projects/VM_169.x
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="3)-install-precise32-box"&gt;3) Install Precise32 Box&lt;/h3&gt;

&lt;p&gt;Precise32 box is important on ubuntu desktop, because thanks to this box you can modify your virtual machine.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;Vagrant/Projects/VM_169.x
&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant box add precise32 http://files.vagrantup.com/precise32.box --provider virtualbox
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After install, you can check with,&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant box list
precise32 &lt;span class="o"&gt;(&lt;/span&gt;virtualbox, 0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="4)-create-new-virtual-machine"&gt;4) Create New Virtual Machine&lt;/h3&gt;

&lt;p&gt;For create new virtual machine, you should initialize precise32 box,&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant init precise32
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you write above command, you get warning about it, this means include &lt;code&gt;Vagrantfile&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id="5)-install-virtual-machine-configuration"&gt;5) Install Virtual Machine configuration&lt;/h3&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;wget https://raw.github.com/saasbook/courseware/master/vm-setup/configure-image-0.10.3.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should change permission to executable for virtual machine configuration&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;chmod +x configure-image-0.10.3.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Run the virtual machine with &lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant up
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Connecting with virtual machine&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant ssh
Welcome to Ubuntu 12.04 LTS &lt;span class="o"&gt;(&lt;/span&gt;GNU/Linux 3.2.0-23-generic-pae i686&lt;span class="o"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;*&lt;/span&gt; Documentation:  https://help.ubuntu.com/
New release &lt;span class="s1"&gt;'14.04.1 LTS'&lt;/span&gt; available.
Run &lt;span class="s1"&gt;'do-release-upgrade'&lt;/span&gt; to upgrade to it.
Welcome to your Vagrant-built virtual machine.
Last login: Sun Oct 12 09:36:51 2014 from 10.0.2.2
&lt;span class="gp"&gt;vagrant@precise32:~$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Run virtual machine configuration, &lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;vagrant@precise32:~$ &lt;/span&gt;/vagrant/configure-image-0.10.3.sh
Enter password to be used &lt;span class="k"&gt;for &lt;/span&gt;sudo commands:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;you should enter a password for commands above.&lt;/p&gt;

&lt;p&gt;If you finish work on virtual machine, you write below commands for exit or shut down virtual machine&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant &lt;span class="nb"&gt;suspend&lt;/span&gt;
&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant resume
&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant halt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or if you want to remove all things from virtual machine&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant destroy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But for building your project again only the command below is enough.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant up
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;When I say &lt;code&gt;Vagrant&lt;/code&gt; is useful for working in a team, look &lt;a href="https://vagrantcloud.com/"&gt;Vagrant Cloud&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can create account and share your vagrant environment with anyone with &lt;code&gt;vagrant cloud&lt;/code&gt;.
After create your account, open your terminal,&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant login
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Write e-mail or username and password for vagrant cloud, then&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant share
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For more detail about Vagrant, you can look ;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.vagrantup.com/v2/getting-started/index.html"&gt;Vagrant&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saasbook/courseware/wiki/Setting-Up-Vagrant-Environment-on-Ubuntu-Platform"&gt;Vagrant on Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;or,&lt;/p&gt;

&lt;p&gt;if you want to read same article with details in Turkish, you can read it &lt;a href="http://lab2023.com/vagranta-giris.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo; s all.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails 4.2 Kararlı Sürümü Yayınlandı</title>
    <link rel="alternate" href="http://lab2023.com/rails-4-2-kararli-surum-yayinlandi.html"/>
    <id>http://lab2023.com/rails-4-2-kararli-surum-yayinlandi.html</id>
    <published>2014-12-22T02:00:00+02:00</published>
    <updated>2015-11-24T23:26:50+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;Popüler Ruby web framework’ü Rails’in 4.2 sürümü, kararlı olarak yayınlandı. Sürüm, son betasından bu yana 1600’den fazla commit ile güncellendi ve kullanıma hazır hale getirildi. Şimdi sürümdeki önemli özelliklere tekrardan göz atalım:&lt;/p&gt;

&lt;h3 id="active-job-ve-action-mailer-#deliver_later"&gt;Active Job ve Action Mailer #deliver_later&lt;/h3&gt;

&lt;p&gt;En önemli yeniliklerden birisi olan Active Job, arkaplan iş yöneticileri için bir bağdaştırıcı görevi görüyor. Bu sayede jenerik bir biçimde yazdığınız işler kuyruğa atılıyor ve tüm yöneticiler üzerinde çalıştırılabiliyor. ActiveRecord ile ilişkisel veritabanlarının çalışma tarzına benzer bir mantıkla çalıştığı söylenebilir.&lt;/p&gt;

&lt;p&gt;Bunun yanında Action Mailer sistemine eklenen yeni bir özellik sayesinde, e-postalar gecikmeli olarak gönderilebiliyor. “deliver_later” metodu ile gerçekleştirilen bu eylem, gönderilecek e-postayı iş kuyruğuna ekliyor ve belirlenen zamanda gönderilmesini sağlıyor.&lt;/p&gt;

&lt;h3 id="global-id"&gt;Global ID&lt;/h3&gt;

&lt;p&gt;Bu kütüphane ile ActiveRecord üstünden çektiğiniz kayıtları anında serileştirebiliyorsunuz. Tipik nesne numaraları yerine, serileştirilmiş bir kimlik kullanabilmenizi sağlıyor. Örnek olarak:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;person_gid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to_global_id&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;person_gid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"gid://app/Person/1"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="adequate-record"&gt;Adequate Record&lt;/h3&gt;

&lt;p&gt;Bu kütüphane sayesinde Active Record üstünden sıklıkla yapılan sorgulamalar kısmi olarak önbelleğe alınıyor ve gerektiğinde tekrardan kullanılarak hız kazanımı sağlanıyor. Örnek kıyaslamalar için şuraya gözatabilirsiniz:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://tenderlovemaking.com/2014/02/19/adequaterecord-pro-like-activerecord.html"&gt;http://tenderlovemaking.com/2014/02/19/adequaterecord-pro-like-activerecord.html&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="web-console"&gt;Web Console&lt;/h3&gt;

&lt;p&gt;Google Summer of Code ile gelen bu proje sayesinde, sayfa bir istisna/hata oluşturduğu zaman anında bir konsol açılıyor. Bu konsoldan o anda geçerli olan işlemleri ve değişkenleri denetleyebilmeniz sağlanıyor. Buna ek olarak, sadece hata oluştuğunda değil, geliştirme sürecinde iken konsolu sayfanın altında sürekli açık bırakabiliyorsunuz.&lt;/p&gt;

&lt;p&gt;&lt;img alt="webconsole" src="assets/images/articles/2014-12-22-rails-4-2-kararli-surum-yayinlandi/webconsole.gif" /&gt;&lt;/p&gt;

&lt;h3 id="foreign-key"&gt;Foreign Key&lt;/h3&gt;

&lt;p&gt;Bu özellikle beraber, Rails uzun zamandan sonra Active Record modellerinde dış anahtarları (foreign key) desteklemeye başlıyor. Active Record migration’ları için şimdilik “add_foreign_key” ve “remove_foreign_key” metotları eklenmiş durumda. Önemli bir ayrıntı olarak, dış anahtar özelliğinin şu anda sadece MySQL ve PostgreSQL bağdaştırıcılarını desteklediğini belirtmekte fayda var.&lt;/p&gt;

&lt;p&gt;Bunun dışındaki eklenenler, çıkartılanlar, önerilmeyen (deprecated) yapılar ve hata yamaları ile ilgili detaylı bilgiler için:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://guides.rubyonrails.org/4_2_release_notes.html"&gt;http://guides.rubyonrails.org/4_2_release_notes.html&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>How we created Bulutfon animation</title>
    <link rel="alternate" href="http://lab2023.com/how-we-created-bulutfon-animation.html"/>
    <id>http://lab2023.com/how-we-created-bulutfon-animation.html</id>
    <published>2014-12-17T02:00:00+02:00</published>
    <updated>2017-01-26T14:07:26+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;In this article I will try to give a short explanation about creating an animation.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;step is creating a story&amp;hellip;&lt;/li&gt;
&lt;li&gt;step is creating a main character&amp;hellip;&lt;/li&gt;
&lt;li&gt;step is creating a storyboard&amp;hellip;&lt;/li&gt;
&lt;li&gt;step is creating main character as a marionette, with bones in an animation program&amp;hellip;&lt;/li&gt;
&lt;li&gt;step is creating all the objects that we will need in the animation&amp;hellip;&lt;/li&gt;
&lt;li&gt;step is making an animation&amp;hellip;&lt;/li&gt;
&lt;li&gt;step is making sound effects&amp;hellip;&lt;/li&gt;
&lt;li&gt;step is making a background music&amp;hellip;&lt;/li&gt;
&lt;li&gt;step is applying the merging process&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="1.-step-is-creating-a-story..."&gt;1. step is creating a story&amp;hellip;&lt;/h3&gt;

&lt;p&gt;This story is telling us about &lt;a href="https://www.bulutfon.com/?ref=1"&gt;Bulutfon&lt;/a&gt; products, explaining all the opportunities that &lt;a href="https://www.bulutfon.com/?ref=1"&gt;Bulutfon&lt;/a&gt; gives to customers, offering very comfortable services, to make business foundation easier.&lt;/p&gt;

&lt;h3 id="2.-step-is-creating-a-main-character..."&gt;2. step is creating a main character&amp;hellip;&lt;/h3&gt;

&lt;p&gt;After creating the story the next important step is creating a main character. We created this personage with the idea in mind, that we need a young businessman, very sincere, smart, energetic, with the nice smile and kind eyes. We made him very close to the reality, with human proportions.&lt;/p&gt;

&lt;p&gt;&lt;img alt="main character" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/character.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="3.-step-is-creating-a-storyboard..."&gt;3. step is creating a storyboard&amp;hellip;&lt;/h3&gt;

&lt;p&gt;After knowing that the story and with main character ready, we went to the next, very important step, which is creating the storyboard. We made the storyboard without too much detail, just put the main idea of each sentence of the story. We made it like a short animated description to every single scene, to make people understand our product and the mission of our product. We put a lot of notes in the margins (arrows, which show us from where to where our character is moving and also a lot of comments for the each scene, to help us not to lose the idea of the scene). The result is:&lt;/p&gt;

&lt;p&gt;&lt;img alt="storyboard" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/storyboard.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="4.-step-is-creating-main-character-as-a-marionette,-with-bones-in-an-animation-program..."&gt;4. step is creating main character as a marionette, with bones in an animation program&amp;hellip;&lt;/h3&gt;

&lt;p&gt;After storyboard is totally ready with all the corrections that were made, we went to the next step, which is creating the main character as a marionette. We created him with bones and all functions, that we will need, to animate him. For example, we drew several types of mouth and eyes, to give him opportunity to speak and blink and change his eyes&amp;rsquo; expression, from normal to surprised or from normal to sad etc. Also as a cartoon’s character he can be squashed and stretched, he can move his legs and hands, his head, his eyebrows, even his tie can be animated.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/bones.JPG" /&gt;&lt;/p&gt;

&lt;h3 id="5.-step-is-creating-all-the-objects-that-we-will-need-in-the-animation..."&gt;5. step is creating all the objects that we will need in the animation&amp;hellip;&lt;/h3&gt;

&lt;p&gt;We prepared all the elements, that we will use in our animation. For some elements we also created bones, because we will animate them also. We chose main colors very open, like yellow, green, red, blue, which are mixed with very soft grey.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/objects.JPG" /&gt;&lt;/p&gt;

&lt;h3 id="6.-step-is-making-an-animation..."&gt;6. step is making an animation&amp;hellip;&lt;/h3&gt;

&lt;p&gt;The most important step is making animation of characters by manipulating bones. We tried to make them plastic, comic, very lifeful and adorable. For making animation more realistic we were using rules, that Walt Disney developed.
Here is a very short review with the main principles of making animation:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=l-KtwW6eptM"&gt;Main principles of making animation &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every single scene we rendered and saved in a folder as a separate file.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/timeline.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;This is what we got as a result:&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/story.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="7.-step-is-making-sound-effects..."&gt;7. step is making sound effects&amp;hellip;&lt;/h3&gt;

&lt;p&gt;We were using a lot of sound effects in the animation. It is necessary. It gives accents into a movement, it gives weight to a falling object, it gives weight to walking men etc.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" width="683" height="832" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/voice.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="8.-step-is-making-background-music..."&gt;8. step is making background music&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Background music is just like an accompaniment to the animation. The whole mood depends on the background music. The animation rhythm and music rhythm have to work synchronously to make all scene finished. We chose energetic and very funny music according the rhythm of the animation and the nature of the main character. So all together they work great as a system.&lt;/p&gt;

&lt;h3 id="9.-step-is-applying-the-merging-process..."&gt;9. step is applying the merging process&amp;hellip;&lt;/h3&gt;

&lt;p&gt;When we have background music and when we have all the animation files finished and all sound effects completed, we just need to make a final step, which is merge all of the files to one video file.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" width="576" height="796" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/merge.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Now after all of the work that have been made, we can see final animation:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://vimeo.com/102756655"&gt;How we created Bulutfon animation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;hellip;and we have shared to Dribbble&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dribbble.com/shots/1676198-Bulutfon-Animation"&gt;Bulutfon animation on dribbble&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for your attention.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Как создавалась анимация, посвященная "Bulutfon"</title>
    <link rel="alternate" href="http://lab2023.com/how-we-created-bulutfon-animation-russian.html"/>
    <id>http://lab2023.com/how-we-created-bulutfon-animation-russian.html</id>
    <published>2014-12-17T02:00:00+02:00</published>
    <updated>2017-01-26T14:07:26+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;В этой статье я расскажу вам о поэтапном создании рекламного ролика.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;этап – рождение сюжета;&lt;/li&gt;
&lt;li&gt;этап – моделирование главного персонажа;&lt;/li&gt;
&lt;li&gt;этап – создание комикса;&lt;/li&gt;
&lt;li&gt;этап – превращение главного персонажа в марионетку при помощи «костей» в специальной анимационной программе;&lt;/li&gt;
&lt;li&gt;этап – создание всех объектов, которые будут использованы при анимации;&lt;/li&gt;
&lt;li&gt;этап – анимирование;&lt;/li&gt;
&lt;li&gt;этап – озвучивание анимации;&lt;/li&gt;
&lt;li&gt;этап – подборка музыки для фона;&lt;/li&gt;
&lt;li&gt;этап – объединение анимации, музыки и озвучки.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="1-этап-–-рождение-сюжета…"&gt;1 этап – рождение сюжета…&lt;/h3&gt;

&lt;p&gt;История рассказывает нам о компании &lt;a href="https://www.bulutfon.com/?ref=1"&gt;Bulutfon&lt;/a&gt;, обо всех ее существующих продуктах, сервисах и инновационных проектах, позволяющих сделать бизнес-процесс своих клиентов удобнее и проще.&lt;/p&gt;

&lt;h3 id="2-этап-–-моделирование-главного-персонажа…"&gt;2 этап – моделирование главного персонажа…&lt;/h3&gt;

&lt;p&gt;Моделируя главный персонаж, мы хотели, чтобы он получился жизнерадостным, умным, молодым, предприимчивым бизнесменом с обаятельной улыбкой и добрыми глазами. Кроме того, мы сделали его образ, приближенным к реальности, с человеческими пропорциями.&lt;/p&gt;

&lt;p&gt;&lt;img alt="main character" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/character.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="3-этап-–-создание-комикса…"&gt;3 этап – создание комикса…&lt;/h3&gt;

&lt;p&gt;После того, как история известна и главный персонаж готов, мы перешли к следующему ответственному этапу – созданию комикса. В нём изложена главная идея каждого отдельного предложения компании, краткое анимированное объяснение с целью сделать понятным предназначение того или иного продукта. Наш комикс получился кратким и очень ёмким.&lt;/p&gt;

&lt;p&gt;Для упрощения работы мы использовали примечания – небольшие заметки, объясняющие мелкие детали, как, например, настроение персонажа и т.д., стрелки, чтобы видеть движение персонажа внутри отдельного плана. Вот что у нас получилось:&lt;/p&gt;

&lt;p&gt;&lt;img alt="storyboard" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/storyboard.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="4-этап-–-превращение-главного-персонажа-в-марионетку-при-помощи-«костей»-в-специальной-анимационной-программе…"&gt;4 этап – превращение главного персонажа в марионетку при помощи «костей» в специальной анимационной программе…&lt;/h3&gt;

&lt;p&gt;После того, как работа над комиксом закончена и сделаны все поправки, мы перешли к следующему этапу – превращению нашего персонажа в марионетку. Мы создали ему «скелет», помогающий управлять героем во время анимации. Наш персонаж может разговаривать, моргать и менять выражение глаз, может удивляться, быть грустным и смеяться. Как всякий мультипликационный герой, он очень пластичен и гибок.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/bones.JPG" /&gt;&lt;/p&gt;

&lt;h3 id="5-этап-–-создание-всех-объектов,-которые-будут-использованы-при-анимации…"&gt;5 этап – создание всех объектов, которые будут использованы при анимации…&lt;/h3&gt;

&lt;p&gt;Мы подготовили все необходимые объекты, которые использовались в ходе анимирования. Для некоторых элементов мы создали «кости», поскольку они также участвуют в анимации. Мы выбрали очень чистые открытые цвета: желтый, зеленый, красный, голубой, теплый серый.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/objects.JPG" /&gt;&lt;/p&gt;

&lt;h3 id="6-этап-–-анимирование…"&gt;6 этап – анимирование…&lt;/h3&gt;

&lt;p&gt;В процессе анимирования мы попытались сделать наших персонажей живыми и обаятельными. В этом нам помогли некоторые правила анимации, которые были разработаны У. Диснеем. Вы можете ознакомиться с ними здесь:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=l-KtwW6eptM"&gt;Главные приципы анимации&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Каждый  план мы рендерили и сохраняли в папку, как отдельный файл.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/story.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Вот что в результате у нас получилось:&lt;/p&gt;

&lt;h3 id="7-этап-–-озвучивание-анимации…"&gt;7 этап – озвучивание анимации…&lt;/h3&gt;

&lt;p&gt;В нашей анимации мы использовали большое количество различных звуков. Использование звуков позволило нам верно расставить акценты, создать ощущение падающих предметов или звуки шагающего человека и т.д.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" width="683" height="832" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/voice.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="8-этап-–-подборка-музыки-для-фона…"&gt;8 этап – подборка музыки для фона…&lt;/h3&gt;

&lt;p&gt;Фоновая музыка – это аккомпанемент, который создает настроение всему мультфильму. Музыкальный ритм и ритм анимации должны работать синхронно. Мы выбрали очень легкую и энергичную песенку, которая перекликается с характером нашего персонажа. В итоге все элементы нашего ролика работают как одна система.&lt;/p&gt;

&lt;h3 id="9-этап-–-объединение-анимации,-музыки-и-озвучки..."&gt;9 этап – объединение анимации, музыки и озвучки&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Теперь, когда анимация выполнена и подобрана музыка, нам осталось сделать завершающий этап – объединить все отдельные элементы анимации в один общий файл – видео файл.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" width="576" height="796" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/merge.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;В итоге мы получили великолепный ролик для компании &lt;a href="https://www.bulutfon.com/?ref=1"&gt;Bulutfon&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://vimeo.com/102756655"&gt;Как создавалась анимация, посвященная &lt;q&gt;Bulutfon&lt;/q&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Вы можете найти нас на Dribbble&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dribbble.com/shots/1676198-Bulutfon-Animation"&gt;Анимация, посвященная &lt;q&gt;Bulutfon&lt;/q&gt; на Dribbble&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Благодарим за внимание.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Cómo creamos la animación para Bulutfon.</title>
    <link rel="alternate" href="http://lab2023.com/como-creamos-la-animacion-para-bulutfon.html"/>
    <id>http://lab2023.com/como-creamos-la-animacion-para-bulutfon.html</id>
    <published>2014-12-17T02:00:00+02:00</published>
    <updated>2017-01-26T14:07:26+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;En este artículo trataré de realizar una corta explicación sobre el proceso de creacion de la animación.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;paso es crear la historia&amp;hellip;&lt;/li&gt;
&lt;li&gt;paso es crear un personaje principal&amp;hellip;&lt;/li&gt;
&lt;li&gt;paso es crear un storyboard&amp;hellip;&lt;/li&gt;
&lt;li&gt;paso es crear un personaje principal que funcione a través de huesos en el programa de animación&amp;hellip;&lt;/li&gt;
&lt;li&gt;paso es crear todos los objetos que necesitaremos en la animación&amp;hellip;&lt;/li&gt;
&lt;li&gt;paso es realizar la animación&amp;hellip;&lt;/li&gt;
&lt;li&gt;paso es realizar los efectos de sonido&amp;hellip;&lt;/li&gt;
&lt;li&gt;paso es realizar la musica de fondo&amp;hellip;&lt;/li&gt;
&lt;li&gt;paso es aplicar el proceso de montaje&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="1.-paso-es-crear-la-historia..."&gt;1. paso es crear la historia&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Esta historia cuenta sobre los productos de &lt;a href="https://www.bulutfon.com/?ref=1"&gt;Bulutfon&lt;/a&gt;, explicando todas las oportunidades que &lt;a href="https://www.bulutfon.com/?ref=1"&gt;Bulutfon&lt;/a&gt; proporciona a sus clientes, ofreciendo cómodos servicios, para hacer el emprendimiento de negocios mucho más facil.&lt;/p&gt;

&lt;h3 id="2.-paso-es-crear-un-personaje-principal..."&gt;2. paso es crear un personaje principal&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Despues de crear la historia lo siguiente mas importante es crear un personaje principal. Creamos este personaje con la idea en la mente de un joven hombre de negocios, muy sincero, energético, con una sonrisa simpático y ojos amables. Lo hicimos muy cercano a la realidad, con proporciones humanas.&lt;/p&gt;

&lt;p&gt;&lt;img alt="main character" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/character.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="3.-paso-es-crear-un-storyboard..."&gt;3. paso es crear un storyboard&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Despues de tener la historia y el personaje principal listos, fuimos al siguiente paso, uno de los más importantes, crear el story board. El storyboard no tenia muchos detalles, solo plasmamos la idea principal de cada frase de la historia. Lo realizamos como un pequeña descripción de la animación para cada escena, para hacer a las personas entender nuestro producto y la misión de nuestro producto, pusimos muchas notas en las márgenes (flechas que mostraban de donde a donde nuestro personaje debía moverse, asi como tambien muchos comentarios que nos ayudaran a no perder una sola idea), el resultado fue:&lt;/p&gt;

&lt;p&gt;&lt;img alt="storyboard" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/storyboard.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="4.-paso-es-crear-un-personaje-principal-que-funcione-a-través-de-huesos-en-el-programa-de-animación..."&gt;4. paso es crear un personaje principal que funcione a través de huesos en el programa de animación&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Despues de que el storyboard esta completamente listo con todas las correcciones necesarias, continuamos al siguiente paso, que es crear los huesos del personaje principal. Lo creamos con puntos con todas las funciones necesarias para animarlo. Por ejemplo, dibujamos varios tipos de bocas y ojos, para darle la oportunidad de hablar, parpadear y cambiar la expresión de sus ojos, de normal a sorprendido o tristes, etc. tambien el caracter puedes estirar y aplastar, mover sus piernas, brazos, cabeza, cejas y la corbata.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/bones.JPG" /&gt;&lt;/p&gt;

&lt;h3 id="5.-paso-es-crear-todos-los-objetos-que-necesitaremos-en-la-animación..."&gt;5. paso es crear todos los objetos que necesitaremos en la animación&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Preparamos todos los elementos que vamos a usar en nuestra animación. Para algunos objetos creamos también huesos para generar animación en ellos. Escogimos los colores principales muy abiertos como por ejemplo amarillo, verde, rojo, azul mezclado con un gris suave.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/objects.JPG" /&gt;&lt;/p&gt;

&lt;h3 id="6.-paso-es-realizar-la-animación..."&gt;6. paso es realizar la animación&amp;hellip;&lt;/h3&gt;

&lt;p&gt;El paso más importante es realizar la animación de los personajes por la manipulación de huesos. Tratamos de hacerlo plástico y cómico, muy vivido y adorable. Para hacer la animación más realista estuvimos usando las leyes de walt disney.
Aqui un pequeño resumen con los principios básicos para realizar animación digital.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=l-KtwW6eptM"&gt;Principios básicos de la animación&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cada escena fue renderizada y guardada en carpetas diferentes.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/timeline.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Este es nuestro resultado:&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/story.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="7.-paso-es-realizar-los-efectos-de-sonido..."&gt;7. paso es realizar los efectos de sonido&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Estamos usando muchos efectos de sonido en la animación, es necesario. Brinda acentos en cada movimiento, demuestra peso en los objetos que caen, demuestra peso en el caminar del personaje etc.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" width="683" height="832" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/voice.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="8.-paso-es-realizar-la-musica-de-fondo..."&gt;8. paso es realizar la musica de fondo&amp;hellip;&lt;/h3&gt;

&lt;p&gt;La música de fondo es solo para el acompañamiento de la animación. Todo el tono depende de la musicalización de fondo. El ritmo de la animación y el ritmo de la música deben trabajar sincronizados para finalizar una escena. Escogimos una melodía energética y muy graciosa.&lt;/p&gt;

&lt;h3 id="9.-paso-es-aplicar-el-proceso-de-montaje..."&gt;9. paso es aplicar el proceso de montaje&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Cuando tenemos la música de fondo y tenemos todos los archivos de la animación completos y los efectos de sonido mezclados, solo necesitamos realizar un último paso, que es el montaje final uniendo todas la piezas en un solo video.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" width="576" height="796" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/merge.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Ahora despues de todo el trabajo realizado podemos observar nuestro resultado final:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://vimeo.com/102756655"&gt;Como creamos la animación de Bulutfon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;hellip;y tambien lo compartimos en dribbble&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dribbble.com/shots/1676198-Bulutfon-Animation"&gt;Encuentra esta animación en Dribbble&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gracias por su atención.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Bulutfon animasyonunu nasıl hazırladık</title>
    <link rel="alternate" href="http://lab2023.com/bulutfon-animasyonunu-nasil-hazirladik.html"/>
    <id>http://lab2023.com/bulutfon-animasyonunu-nasil-hazirladik.html</id>
    <published>2014-12-17T02:00:00+02:00</published>
    <updated>2017-01-26T14:07:26+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;Bu makalede, animasyon oluşturma ile ilgili kısaca bilgi vermeye çalışacağım.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;adım, bir hikaye oluşturulması&amp;hellip;&lt;/li&gt;
&lt;li&gt;adım, bir ana karakter oluşturulması&amp;hellip;&lt;/li&gt;
&lt;li&gt;adım, bir hikaye panosu oluşturulması&amp;hellip;&lt;/li&gt;
&lt;li&gt;adım, ana karakterin bir kukla olarak, iskeletiyle birlikte animasyon programında oluşturulması&amp;hellip;&lt;/li&gt;
&lt;li&gt;adım, animasyon için gerekli olan tüm nesnelerin oluşturulması&amp;hellip;&lt;/li&gt;
&lt;li&gt;adım, bir animasyon oluşturulması&amp;hellip;&lt;/li&gt;
&lt;li&gt;adım, ses efektlerinin oluşturulması&amp;hellip;&lt;/li&gt;
&lt;li&gt;adım, arka plan müziğinin oluşturulması&amp;hellip;&lt;/li&gt;
&lt;li&gt;adım, birleştirme işlemlerinin uygulanması&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="1.-adım,-bir-hikaye-oluşturulması..."&gt;1. adım, bir hikaye oluşturulması&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Bu hikaye bize; &lt;a href="https://www.bulutfon.com/?ref=1"&gt;Bulutfon&lt;/a&gt; ürünlerini anlatıyor; iş kurmayı kolaylaştırmak için &lt;a href="https://www.bulutfon.com/?ref=1"&gt;Bulutfon&lt;/a&gt;&amp;lsquo;un müşterilere sunduğu fırsatları, sağladığı rahat kullanımlı servisleri açıklıyor.&lt;/p&gt;

&lt;h3 id="2.-adım,-bir-ana-karakter-oluşturulması..."&gt;2. adım, bir ana karakter oluşturulması&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Hikayeyi oluşturduktan sonraki önemli adım, bir ana karakter oluşturmaktır. Bu karakteri; aklımızda çok samimi, zeki, enerjik, hoş gülümseyişe ve nazik gözlere sahip genç bir işadamına ihtiyacımız olduğu fikri ile oluşturduk. İnsan ölçülerine uygun olarak gerçeğe çok yakın bir şekilde hazırladık.&lt;/p&gt;

&lt;p&gt;&lt;img alt="main character" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/character.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="3.-adım,-bir-hikaye-panosu-oluşturulması..."&gt;3. adım, bir hikaye panosu oluşturulması&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Hikaye ve ana karakter hazır olduktan sonra, bir sonraki çok önemli olan hikaye panosu oluşturma adımına geldik. Hikaye panosunu çok fazla detay olmadan oluşturduk, sadece hikayenin her cümlesindeki ana fikri ekledik. İnsanların ürünümüzü ve ürünümüzün amacını anlamalarını sağlamak için her bir sahneyi kısa animasyonlu açıklama şeklinde hazırladık. Kenar boşluklarına birçok not (karakterimizin nereden nereye hareket ettiğini gösteren oklar ve her bir sahneye, sahnedeki fikri kaybetmemek için bize yardımcı olması amacıyla birçok yorum) ekledik. Sonuç bu:&lt;/p&gt;

&lt;p&gt;&lt;img alt="storyboard" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/storyboard.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="4.-adım,-ana-karakterin-bir-kukla-olarak,-iskeletiyle-birlikte-animasyon-programında-oluşturulması..."&gt;4. adım, Ana karakterin bir kukla olarak, iskeletiyle birlikte animasyon programında oluşturulması&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Tüm düzeltmeler yapılıp hikaye panosu tam olarak hazır olduğunda, sonraki adıma, karakterin kuklaya dönüştürülmesine geçtik. İş adamımıza animasyon ekleyebilmek için, onu ihtiyaç duyabileceğimiz iskelet ve tüm fonksiyonlar ile birlikte oluşturduk. Örneğin; konuşması, göz kırpması ve gözlerinin ifadesini normalden şaşırmışa veya normalden mutsuza değiştirebilmesini sağlamak için çok tipte ağız ve göz çizdik. Aynı zamanda çizgi karakter olduğundan ezilebilir ve uzayabilir; ayaklarını ve ellerini, kafasını, kaşlarını oynatabilir; hatta kravatına bile animasyon eklenebilir.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/bones.JPG" /&gt;&lt;/p&gt;

&lt;h3 id="5.-adım,-animasyon-için-gerekli-olan-tüm-nesnelerin-oluşturulması..."&gt;5. adım, Animasyon için gerekli olan tüm nesnelerin oluşturulması&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Animasyonda kullanacağımız bütün öğeleri oluşturduk. Bazı öğelere animasyon ekleyeceğimizden onlar için de ayrıca iskelet oluşturduk. Ana renkleri; çok yumuşak gri ile karıştırılmış sarı, yeşil, mavi ve kırmızı gibi çok açık renkler olarak seçtik.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/objects.JPG" /&gt;&lt;/p&gt;

&lt;h3 id="6.-adım,-bir-animasyon-oluşturulması..."&gt;6. adım, bir animasyon oluşturulması&amp;hellip;&lt;/h3&gt;

&lt;p&gt;En önemli adım, iskeleti değiştirerek karakterlerin hareket etmesini sağlamaktır. Karakterleri plastik, komik, çok hayat dolu ve çok güzel yapmaya çalıştık. Animasyonu daha gerçekçi yapmak için, Walt Disney&amp;#39;in geliştirdiği kuralları kullandık. Animasyon yapmanın temel prensipleri ile ilgili kısa bir video buradadır:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=l-KtwW6eptM"&gt;Animasyon oluşturmanın ana prensipleri&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Her bir sahneyi işledik ve bir klasör içine ayrı bir dosya olarak kaydettik.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/timeline.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Sonuç olarak aldığımız bu:&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/story.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="7.-adım,-ses-efektlerinin-oluşturulması..."&gt;7. adım, ses efektlerinin oluşturulması&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Animasyonda bir çok ses efekti kullandık. Bu çok gerekli. Hareketlerdeki vurguyu öne çıkarır, düşen bir nesneye ağırlık verir, yürüyen bir adama ağırlık verir vs.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" width="683" height="832" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/voice.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="8.-adım,-arka-plan-müziğinin-oluşturulması..."&gt;8. adım, arka plan müziğinin oluşturulması&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Arka plan müziği, animasyona refakatçi gibidir. Tüm ruh hali arka plan muziğine dayanır.  Animasyon ritmi ve müzik ritmi tüm sahnenin tamamlanmasını sağlamak için eş zamanlı olarak çalışmak zorundadır.  Animasyonun ritmine ve ana karakterin doğasına uygun enerjik ve çok eğlenceli bir müzik seçtik. Bu sayede, tüm hepsi sistem olarak harika bir şekilde çalışmış oldu.&lt;/p&gt;

&lt;h3 id="9.-adım,-birleştirme-işlemlerinin-uygulanması..."&gt;9. adım, birleştirme işlemlerinin uygulanması&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Arkaplan müziği elimizde olduğunda, tüm animasyon dosyalarını tamamlanmış olarak hazırladığımızda ve tüm ses efektleri tamamlandığında; yapmamız gereken sadece bir adım kalıyor, tüm dosyaları tek bir video dosyası olarak birleştirmek.&lt;/p&gt;

&lt;p&gt;&lt;img alt="character with bones" width="576" height="796" src="assets/images/articles/2014-12-17-how-we-created-bulutfon-animation/merge.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Şimdi; tamamlanmış tüm çalışmalardan sonra, final animasyonunu görebiliriz:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://vimeo.com/102756655"&gt;Bulutfon Animasyonunu nasıl oluşturduk?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;hellip;ve Dribbble&amp;#39;da paylaşılmıştır.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dribbble.com/shots/1676198-Bulutfon-Animation"&gt;Bulutfon animasyonu için dribbble paylaşımı&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;İlginiz için teşekkür ederim.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Özgür Web Teknolojileri Günleri'nin ardından</title>
    <link rel="alternate" href="http://lab2023.com/ozgur-web-teknolojileri-gunlerinin-ardindan.html"/>
    <id>http://lab2023.com/ozgur-web-teknolojileri-gunlerinin-ardindan.html</id>
    <published>2014-12-12T02:00:00+02:00</published>
    <updated>2015-11-24T23:26:50+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;Özgür Web Teknolojileri Günleri 2014’e katılacağımızı 2 Aralık’ta &lt;a href="/5-farkli-sunum-ile-katki-sagladigimiz-ve-stant-sponsoru-oldugumuz-ozgur-web-teknolojileri-gunleri-2014-e-davetlisiniz.html"&gt;duyurmuş&lt;/a&gt; ve sizleri de davet etmiştik. 05-06 Aralık’ta İstanbul Yeditepe Üniversitesi’nde 5. kez düzenlenen etkinlikte stant sponsoru olarak yerimizi aldık. Önceki yıllarda olduğu gibi, bu yıl da etkinlikte olmaktan büyük keyif duyduk.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Yeni dostlar" src="assets/images/articles/2014-12-12-owtg-ardindan/stant.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Etkinlik alanındaki diğer stantları dolaştık, standımıza uğrayanları karşıladık, konuştuk, bilgi aldık, bilgi verdik, aydınlandık. Etkinlik boyunca keyifli anlar yaşadık, dostlarımızla buluştuk, Özgür Yazılım’ı destekleyen yeni dostlarla tanıştık.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Lab2023" src="assets/images/articles/2014-12-12-owtg-ardindan/team.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Etkinlik programı olarak 2 gün boyunca birbirinden değerli kişiler, çeşitli seminerler düzenlediler ve bildiriler sundular. Mümkün oldukça bu seminer ve bildiri sunumlarına katıldık, sunulan bilgilerden faydalandık. Ekibimizden arkadaşlarımızın hazırladığı kısa bildiri ve hızlı konuşmaları da bu program içinde sizlerle buluşturma fırsatı bulduk.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Sunum" src="assets/images/articles/2014-12-12-owtg-ardindan/presentation.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Lab2023 olarak yaptığımız sunumlara katılıp yanımızda olan siz dostlarımıza teşekkür ederiz. Katılma fırsatı bulamamış ya da tekrar incelemek isteyenler, sunumlarımıza aşağıdaki bağlantılardan erişebilirler.&lt;/p&gt;

&lt;h3 id="ekibimizin-yaptığı-sunumlar"&gt;Ekibimizin yaptığı sunumlar&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/tayfunoziserikan/ruby-on-rails-4-dot-2-ile-gelen-kullanisli-yenilikler"&gt;Ruby on Rails 4.2 İle Gelen Kullanışlı Yenilikler&lt;/a&gt; - Tayfun Öziş ERİKAN&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/claraisabelpantoja/design-processes-and-resources-for-successful-web-applications"&gt;Design Processes and Resources for&lt;/a&gt;  &lt;a href="https://speakerdeck.com/kamilala/design-processes-and-resources-for-successful-web-applications"&gt;Successful Web Applications&lt;/a&gt; - Clara Isabel PANTOJA MUÑOZ - Kamila GAREEVA&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/claraisabelpantoja/all-about-creative-commons"&gt;All about creative commons&lt;/a&gt; - Clara Isabel PANTOJA MUÑOZ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/kamilala/web-animation"&gt;Animation techniques and principles to make your web application designs more attractive.&lt;/a&gt;- Kamila GAREEVA&lt;/li&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/baygunm/jax-rs-ile-restful-java-web-servisleri"&gt;JAX-RS ile RESTful Java Web Servisleri&lt;/a&gt; - Murat Kemal BAYGÜN&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt="Etkinlik Alanı" src="assets/images/articles/2014-12-12-owtg-ardindan/event-area.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Etkinlik programı kapsamında aynı zamanda, Türkiye’de organize olmuş Ruby, PHP ve Python grupları için birlikte çalışma yapabilmeleri ve tanışmaları için topluluk çalışma toplantıları da yapıldı. Biz de, gönül verdiğimiz Ruby için programda olan Ruby Topluluğu Çalışma Toplantısı’nda katılımımızı yaptık, bu çalışma sonucunda toplulukta beraberce aşağıdaki kararları alıp, sorumluları atadık.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Meetup.com üzerinde Ruby Türkiye grubu oluşturulması.&lt;/li&gt;
&lt;li&gt;S.S.S. hazırlanması ( İlk olarak 10 Madde halinde )&lt;/li&gt;
&lt;li&gt;Sosyal Medya Hesaplarının Yönetimi&lt;/li&gt;
&lt;li&gt;Podcast’lerin oluşturulması&lt;/li&gt;
&lt;li&gt;İş ilanları ve firmalar için erişim sayfası hazırlanması&lt;/li&gt;
&lt;li&gt;Etkinlik Takviminin Ruby Türkiye sitesine eklenmesi&lt;/li&gt;
&lt;li&gt;Wikipedi’de grupla ilgili bir madde oluşturulması&lt;/li&gt;
&lt;li&gt;Grup manifestosu oluşturulması&lt;/li&gt;
&lt;li&gt;Ruby Türkiye domain’in düzenlenmesi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Katılımlarınız için tekrar teşekkür eder, Özgür Web Teknolojileri 2015’te ve diğer etkinliklerde tekrar buluşabilmeyi dileriz.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.ozgurwebgunleri.org.tr/2014/"&gt;Özgür Web Teknolojileri 2014&lt;/a&gt; ve &lt;a href="http://www.ozgurwebgunleri.org.tr/2014/etkinlik-programi"&gt;etkinlik programı&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>5 Farklı Sunum ile Katkı Sağladığımız ve Stant Sponsoru Olduğumuz Özgür Web Teknolojileri Günleri 2014'e Davetlisiniz</title>
    <link rel="alternate" href="http://lab2023.com/5-farkli-sunum-ile-katki-sagladigimiz-ve-stant-sponsoru-oldugumuz-ozgur-web-teknolojileri-gunleri-2014-e-davetlisiniz.html"/>
    <id>http://lab2023.com/5-farkli-sunum-ile-katki-sagladigimiz-ve-stant-sponsoru-oldugumuz-ozgur-web-teknolojileri-gunleri-2014-e-davetlisiniz.html</id>
    <published>2014-12-02T02:00:00+02:00</published>
    <updated>2015-11-24T23:26:50+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;Bu yıl 5. kez düzenlenecek olan Özgür Web Teknolojileri Günleri 2014, &lt;strong&gt;05 – 06 Aralık’ta İstanbul Yeditepe Üniversitesi&lt;/strong&gt;’nde gerçekleştirilecektir.&lt;/p&gt;

&lt;p&gt;Önceki yıllarda da düzenli olarak katıldığımız etkinliğe bu sene Lab2023 olarak 5 farklı sunum içeriği ile katkı sağlıyoruz.&lt;/p&gt;

&lt;p&gt;Bunun yanı sıra stant sponsoru da olduğumuz etkinlikte sizleri de aramızda görmekten ve tanışıp sohbet etme fırsatı bulmaktan mutluluk duyacağız.&lt;/p&gt;

&lt;p&gt;Etkinlikte yer alan sunumlarımıza ait detaylar aşağıdaki gibidir.&lt;/p&gt;

&lt;h3 id="06-aralık-2014---cumartesi"&gt;06 Aralık 2014 - Cumartesi&lt;/h3&gt;

&lt;h4 id="kerem-can-karakaş-salonu"&gt;Kerem Can Karakaş Salonu&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;17:00-17:20 - Design Processes and Resources for Successful Web Applications – Clara Isabel Pantoja Muñoz – Kamila Gareeva (Kısa Bildiri)&lt;/li&gt;
&lt;li&gt;17:20-17:25 - All you have to know about cc (creative commons) – Clara Isabel Pantoja Muñoz (Hızlı Konuşma)&lt;/li&gt;
&lt;li&gt;17:25-17:30 - Animation techniques and principles to make your web applications or designs more attractive. – Kamila Gareeva (Hızlı Konuşma)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="dennis-ritchie-salonu"&gt;Dennis Ritchie Salonu&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;10:25-10:50 - Ruby on Rails 4.2 ile gelen kullanışlı yenilikler – Tayfun Öziş Erikan (Kısa Bildiri)&lt;/li&gt;
&lt;li&gt;16:25-16:50 – JAX-RS ile RESTful Java Web Servisleri – Murat Kemal Baygün (Kısa Bildiri)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Etkinlikle ilgili tüm detaylara aşağıdaki adreslerden ulaşabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Detaylı etkinlik programı&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.ozgurwebgunleri.org.tr/2014/etkinlik-programi"&gt;http://www.ozgurwebgunleri.org.tr/2014/etkinlik-programi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Etkinlik web sitesi adresi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.ozgurwebgunleri.org.tr/2014"&gt;http://www.ozgurwebgunleri.org.tr/2014&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;İlgililere duyurulur.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Picture 1" src="assets/images/articles/2014-12-02-owtg-2014-duyuru/owtg2014-afis.jpg" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Flat Design, Simple is perfect</title>
    <link rel="alternate" href="http://lab2023.com/Flat-design-Simple-is-perfect.html"/>
    <id>http://lab2023.com/Flat-design-Simple-is-perfect.html</id>
    <published>2014-11-24T02:00:00+02:00</published>
    <updated>2015-11-24T23:26:50+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;Originally ‘Flat UI design’ is a design style trend that becomes from the interfaces and mobile modern digital designs. This minimalistic style is an integration of basic elements, flat shapes and good practices on graphic diagramming, result is not only a very attractive design, but also optimizing web development and completely adapted to the HTML5 standards.&lt;/p&gt;

&lt;p&gt;Flat design is focused on one particular design principle called ‘form and function’ or ‘form and content’, one of the most relevant concepts in the visual language. Design means make a plan or convention for any creation or construction, in this way we can understand that the main importance for a designer is the final purpose or application of this design. and in this case the optimization of the design for development issue is a basic need, a need that Flat design trend is solving in a highly creative way.&lt;/p&gt;

&lt;p&gt;It is not the first time that computer graphics explore the deep relation between aesthetics and functionality in the design, but nowadays this trend tells us to realize that functionality is the true face of the aesthetic, because simple is perfect. Concept about simplicity is hard to interiorize because this doesn&amp;rsquo;t mean that it is going to be easier for designers, actually it is exactly the opposite, a real paradox: less elements more strategy, more visual techniques applied. &lt;/p&gt;

&lt;p&gt;Here are some advices and techniques for Flat design creations:&lt;/p&gt;

&lt;h3 id="diagramming"&gt;Diagramming&lt;/h3&gt;

&lt;p&gt;The proportioned order of the elements, being aware about your empty spaces in the composition and use a grid is the key for the best diagramming practices. placing the elements in the correct way will save space, give more clear information and make your design look professional.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Picture 1" src="assets/images/articles/2014-11-19-flat-design/2014-11-19-flat-design-diagramming.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="simplicity"&gt;Simplicity&lt;/h3&gt;

&lt;p&gt;Decorative elements are completely not necessary, use contents, color, typography and flat shapes for give the perfect appearance, you don&amp;rsquo;t need useless graphics making noise in your composition. Erase effects, complicated shadows, unnecessary gradients, don&amp;rsquo;t be afraid to do a clean job.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Picture 2" src="assets/images/articles/2014-11-19-flat-design/2014-11-19-flat-design-simplicity.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="typography"&gt;Typography&lt;/h3&gt;

&lt;p&gt;Give typography the importance it deserves, it is not just text, typography is a design element as it can be colors, shapes, photographs, icons and others. choose the right typography, go for the more readable ones. Sans serif is preferred for Flat design.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Picture 3" src="assets/images/articles/2014-11-19-flat-design/2014-11-19-flat-design-typography.png" /&gt;&lt;/p&gt;

&lt;h3 id="color"&gt;Color&lt;/h3&gt;

&lt;p&gt;Flat design is nothing without this terrific color schemes representative of this style, if you are not sure about how to mix colors in an appropriate way, there are already a lot of sources that you can use from the internet. but always remember to plan your palette before start.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Picture 4" src="assets/images/articles/2014-11-19-flat-design/2014-11-19-flat-design-color.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;For more info about color you can review &lt;a href="/how-to-choose-right-colors-for-web-design.html"&gt;How to choose right colors for web design&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails Projesine Rubocop Nasıl Entegre Edilir ?</title>
    <link rel="alternate" href="http://lab2023.com/rails-projesine-rubocop-nasil-entegre-edilir.html"/>
    <id>http://lab2023.com/rails-projesine-rubocop-nasil-entegre-edilir.html</id>
    <published>2014-11-21T02:00:00+02:00</published>
    <updated>2015-11-24T23:26:50+02:00</updated>
    <author>
      <name>lab2023</name>
    </author>
    <content type="html">&lt;p&gt;Elinizde bir rails projesi var ve gelişigüzel kodluyorsanız, ancak kod kalitesinden de ödün vermemek gerekir diye
düşünüyorsanız &lt;code&gt;rubocop&lt;/code&gt; bu aşamada size yardımcı olacaktır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rubocop&lt;/strong&gt;, ruby kodlarının &lt;a href="https://github.com/bbatsov/ruby-style-guide"&gt;ruby stil rehberi&lt;/a&gt; standartlarına göre tarayıp
kodlarınızdaki hataları ve hatalara neden olacak kod parçacıklarınızın göstererek gerektiğinde çözmenizi sağlayan bir
kod analiz aracıdır. Rubocop ile kod kaliteniz artar, daha temiz ve daha profesyonel kod yazmaya başlarsınız.&lt;/p&gt;

&lt;p&gt;Rubocop kurulumuna ve kullanımına başlamadan önce, var olan rails projenizin &lt;code&gt;git&lt;/code&gt; veya türevlerinden herhangi biri ile
paketlenmis olduğuna dikkat etmeniz
gerekmektedir. Sonrasında rubocop&amp;#39;u rails projenize entegre etmek için aşağıdaki işlemleri sırasıyla yapmalısınız,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rails projenizde var olan &lt;code&gt;Gemfile&lt;/code&gt; açıp içine aşağıdaki &lt;code&gt;gem&lt;/code&gt; &amp;lsquo;leri eklemeniz gerekmektedir,&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="ss"&gt;:development&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'rubocop'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;require: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;
  &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'haml-lint'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;require: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;bundle&lt;/code&gt; komutu koşulduktan sonra, &lt;code&gt;rubocop&lt;/code&gt; çalışma mantığını görme amaçlı terminalinizden,&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;rubocop -RD  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutunu koşabilirsiniz.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Entegre işlemine devam edecek olursak, Rails projenizin kök dizinine &lt;code&gt;.rubocop.yml&lt;/code&gt; adında bir dosya oluşturmanız gerekmektedir. 
Ardından terminalde aşağıdaki komutu koşabilirsiniz;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;rubocop --auto-gen-config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutu ile kök dizininde &lt;code&gt;.rubocop-todo.yml&lt;/code&gt; adında bir dosya oluşturmaktadır. &lt;strong&gt;.rubocop-todo.yml&lt;/strong&gt;,  projenizde var olan hataların kontrollerini ve sayılarını içeren bir liste sunmaktadır.&lt;br&gt;
Ek olarak &lt;code&gt;Ubuntu&lt;/code&gt; bilgisayar kullanıyorsanız yukardaki komut ile birlikte ;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;rubocop --config .rubocop_todo.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutunu koşmanız gerekmektedir.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ardından oluşturduğumuz &lt;code&gt;.rubocop.yml&lt;/code&gt; dosyasını içine hangi dosyaları include etmek istiyorsak( veya tam terside dogru ),&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;AllCops&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;Include&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;Rakefile&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;config.ru&lt;/span&gt;
  &lt;span class="s"&gt;Exclude&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db/schema.rb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;şeklinde belirtiyoruz. Ancak eğer var olan dosyalar için işlem yapmak istiyorsanız &lt;code&gt;.rubocop.yml&lt;/code&gt; dosyasını oluşturmadan da&lt;br&gt;
yukarıdaki komutları koşup rubocop&amp;#39;u rails projenize entegre edebilrsiniz.&lt;/p&gt;

&lt;p&gt;Ek olarak rubocop entegre edildikten sonra projeniz için,&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;rubocop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;yerine&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;rubocop -R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Komutunu koşmanız size daha detaylı bir liste verecektir.&lt;/p&gt;

&lt;p&gt;Detaylı bilgi için &lt;a href="https://github.com/bbatsov/rubocop"&gt;Rubocop Github Sayfası&lt;/a&gt; yardımcı olacaktır.&lt;/p&gt;
</content>
  </entry>
</feed>
